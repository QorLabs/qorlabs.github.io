{
  "openapi": "3.0.0",
  "info": {
    "version": "3.0",
    "title": "QorCommerce Endpoints",
    "description": "API Version 3"
  },
  "paths": {
    "/payment/sale/manual/": {
      "post": {
        "operationId": "payment-sale-manual",
        "summary": "Purchase - Manual / Keyed Entry (eComm)",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a payment with a keyed/manually entered credit/debit card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-card-detail"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "creditcard": "",
                    "cvv": "",
                    "month": "",
                    "year": "",
                    "bzip": "",
                    "cardfullname": "",
                    "currency": "",
                    "invoiceid": "",
                    "orderid": "",
                    "ipaddress": "",
                    "baddress": "",
                    "baddress2": "",
                    "bcity": "",
                    "bstate": "",
                    "bcountry": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": "",
                    "store_card": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/cashdiscount": {
      "post": {
        "operationId": "payment-sale-cashdiscount",
        "summary": "Purchase - with a Cash Discount",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a sale with a cash discount",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "cash_discount_amount": {
                        "type": "string"
                      },
                      "cash_discount_percentage": {
                        "type": "integer"
                      },
                      "service_charge": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "invoiceid": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "cfirstname": {
                        "type": "string"
                      },
                      "clastname": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "risk_score": {
                        "type": "integer"
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "A reference id that will be echo'd back in the message response."
                      },
                      "topt": {
                        "type": "string",
                        "description": "set a value to route a transaction to a pre-defined provider."
                      }
                    },
                    "required": [
                      "amount",
                      "creditcard",
                      "cvv",
                      "orderid"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "creditcard": "",
                    "currency": "",
                    "invoiceid": "",
                    "orderid": "",
                    "ipaddress": "",
                    "cemail": "",
                    "cphone": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/swipe": {
      "post": {
        "operationId": "payment-sale-swipe",
        "summary": "Purchase - When Swiping a Card (Track Data)",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a payment with a swiped credit/debit card (requires track data)",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/token": {
      "post": {
        "operationId": "payment-sale-token",
        "summary": "Purchase - Use a Payment Token",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a sale with a card token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "service_charge": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string",
                        "description": "the card token"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "invoiceid": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "cfirstname": {
                        "type": "string"
                      },
                      "clastname": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "risk_score": {
                        "type": "integer"
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "A reference id that will be echo'd back in the message response."
                      },
                      "topt": {
                        "type": "string",
                        "description": "set a value to route a transaction to a pre-defined provider."
                      }
                    },
                    "required": [
                      "amount",
                      "creditcard",
                      "cvv",
                      "orderid"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "creditcard": "",
                    "currency": "",
                    "invoiceid": "",
                    "orderid": "",
                    "ipaddress": "",
                    "cemail": "",
                    "cphone": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/lvl2_3": {
      "post": {
        "operationId": "payment-sale-lvl3",
        "summary": "Purchase - Use Level 2 or 3 Transaction Data",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a payment with Level 2 or 3 data",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "islvl3": {
                        "type": "boolean"
                      },
                      "mid": {
                        "type": "string"
                      },
                      "topt": {
                        "type": "string",
                        "description": "set a value to route a transaction to a pre-defined provider."
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "A reference id that will be echo'd back in the message response."
                      },
                      "amount": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "month": {
                        "type": "string"
                      },
                      "year": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      },
                      "cardfullname": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "invoiceid": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "baddress": {
                        "type": "string"
                      },
                      "baddress2": {
                        "type": "string"
                      },
                      "bcity": {
                        "type": "string"
                      },
                      "bstate": {
                        "type": "string"
                      },
                      "bcountry": {
                        "type": "string"
                      },
                      "cfirstname": {
                        "type": "string"
                      },
                      "clastname": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "total_tax": {
                        "type": "integer"
                      },
                      "purchase_order": {
                        "type": "string"
                      },
                      "shipping_amount": {
                        "type": "integer"
                      },
                      "shipping_zip": {
                        "type": "string"
                      },
                      "shipping_country": {
                        "type": "string"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "ucc": {
                              "type": "string"
                            },
                            "upc": {
                              "type": "string"
                            },
                            "unit_price": {
                              "type": "integer"
                            },
                            "units_sold": {
                              "type": "integer"
                            },
                            "unit_measurement": {
                              "type": "string"
                            },
                            "total_amount": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "islvl3": true,
                    "mid": "<<mid>>",
                    "amount": "required",
                    "creditcard": "required",
                    "cvv": "required",
                    "month": "required",
                    "year": "required",
                    "bzip": "required",
                    "cardfullname": "required if store_card==true",
                    "currency": "",
                    "invoiceid": "",
                    "orderid": "",
                    "ipaddress": "",
                    "baddress": "",
                    "baddress2": "",
                    "bcity": "",
                    "bstate": "",
                    "bcountry": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": "",
                    "total_tax": 0,
                    "purchase_order": "",
                    "shipping_zip": "",
                    "shipping_country": "",
                    "items": [
                      {
                        "name": "",
                        "description": "",
                        "ucc": " ",
                        "upc": "",
                        "unit_price": 0,
                        "units_sold": 0,
                        "unit_measurement": "",
                        "total_amount": ""
                      },
                      {
                        "name": "",
                        "description": "",
                        "ucc": " ",
                        "upc": "",
                        "unit_price": 0,
                        "units_sold": 0,
                        "unit_measurement": "",
                        "total_amount": ""
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/3ds": {
      "post": {
        "operationId": "payment-sale-3ds",
        "summary": "Purchase - Use 3D Secure (3DSv2)",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a payment with authenticated 3-D Secure information",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "month": {
                        "type": "string"
                      },
                      "year": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      },
                      "CAVV": {
                        "type": "string"
                      },
                      "XID": {
                        "type": "string"
                      },
                      "ECIFlag": {
                        "type": "string"
                      },
                      "cardfullname": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "invoiceid": {
                        "type": "string"
                      },
                      "baddress": {
                        "type": "string"
                      },
                      "baddress2": {
                        "type": "string"
                      },
                      "bcity": {
                        "type": "string"
                      },
                      "bstate": {
                        "type": "string"
                      },
                      "bcountry": {
                        "type": "string"
                      },
                      "cfirstname": {
                        "type": "string"
                      },
                      "clastname": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "risk_score": {
                        "type": "integer"
                      },
                      "store_card": {
                        "type": "integer"
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "A reference id that will be echo'd back in the message response."
                      },
                      "topt": {
                        "type": "string",
                        "description": "set a value to route a transaction to a pre-defined provider."
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "amount": "required",
                    "creditcard": "required",
                    "cvv": "required",
                    "month": "required",
                    "year": "required",
                    "bzip": "required",
                    "CAVV": "required",
                    "XID": "required",
                    "ECIFlag": "required",
                    "cardfullname": "",
                    "currency": "",
                    "orderid": "",
                    "ipaddress": "",
                    "invoiceid": "",
                    "baddress": "",
                    "baddress2": "",
                    "bcity": "",
                    "bstate": "",
                    "bcountry": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": "",
                    "risk_score": "",
                    "store_card": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/pin": {
      "post": {
        "operationId": "payment-sale-pin",
        "summary": "Purchase - PIN Debit",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a PIN Debit purchase",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-credit-card-track"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "trackdata": "",
                    "ksnTrack": "",
                    "PIN": "",
                    "knsPIN": "",
                    "currency": "",
                    "orderid": "",
                    "ipaddress": "",
                    "invoiceid": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/sale/pos": {
      "post": {
        "operationId": "payment-sale-pos",
        "summary": "Purchase - Using a Point of Sale (QorConnect)",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process a purchase through a point of sale system with or without QorConnect",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-card-detail"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      }
                    ]
                  }
                },
              "required": [
                  "transaction_data"
                ],  
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "creditcard": "",
                    "cvv": "",
                    "month": "",
                    "year": "",
                    "bzip": "",
                    "cardfullname": "",
                    "store_card": 0,
                    "currency": "",
                    "orderid": "",
                    "ipaddress": "",
                    "invoiceid": "",
                    "baddress": "",
                    "baddress2": "",
                    "bcity": "",
                    "bstate": "",
                    "bcountry": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": ""
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-card-detail"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "creditcard": "",
                    "cvv": "",
                    "month": "",
                    "year": "",
                    "bzip": "",
                    "cardfullname": "",
                    "store_card": 0,
                    "currency": "",
                    "orderid": "",
                    "ipaddress": "",
                    "invoiceid": "",
                    "baddress": "",
                    "baddress2": "",
                    "bcity": "",
                    "bstate": "",
                    "bcountry": "",
                    "cfirstname": "",
                    "clastname": "",
                    "cemail": "",
                    "cphone": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/recurring/setup": {
      "post": {
        "operationId": "payment-sale-recurring-setup",
        "summary": "Recurring - Create a Recurring Purchase",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Setup and process a recurring credit/debit card sale",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/payment-sale-recurring-setup"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/recurring": {
      "post": {
        "operationId": "payment-sale-recurring",
        "summary": "Recurring - Existing Recurring Purchase",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Process an existing recurring credit/debit card purchase initially run by the <span style='color:#5375bd'><b><<company_name>></b></span> payments platform",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/payment-sale-recurring-body"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/my_recurring": {
      "post": {
        "operationId": "payment-sale-recurring_my",
        "summary": "Recurring - Your Recurring Purchase",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Re-Process your existing purchase",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/payment-sale-recurring-my"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/authorize": {
      "post": {
        "operationId": "payment-auth",
        "summary": "Authorization (pre-auth)",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Pre-Authorize an amount on a credit/debit card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-card-detail"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      },
                      {
                        "$ref": "#/components/schemas/request-auth-hospitality-params"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/authorize/token": {
      "post": {
        "operationId": "payment-auth-token",
        "summary": "Authorization (pre-auth) - Use a Payment Token",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Pre-Authorize an amount on a credit/debit card using a card token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-card-sale-required"
                      },
                      {
                        "$ref": "#/components/schemas/request-card-detail-token"
                      },
                      {
                        "$ref": "#/components/schemas/request-customer-card-sale"
                      },
                      {
                        "$ref": "#/components/schemas/request-auth-hospitality-params"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-sale-auth"
                }
              }
            }
          }
        }
      }
    },
    "/payment/void": {
      "post": {
        "operationId": "payment-void",
        "summary": "Cancel / Void",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Cancel / Void a Sale or Authorization - where the transaction was processed online successfully",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "description": "",
                    "properties": {
                      "transaction_id": {
                        "type": "string",
                        "description": "`transaction_id` from a prior Sale or Authorization transaction"
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "A reference id that will be echo'd back in the message response."
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "transaction_id": "required"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "code": "GW00",
                      "message": "The request processed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/refund": {
      "post": {
        "operationId": "payment-refund",
        "summary": "Refund",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Provide a full or partial refund on a Sale or Capture",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-capture-refund"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "amount": "required",
                    "transaction_id": "required",
                    "orderid": "required"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-capture-refund"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "amount": "",
                    "transaction_id": "",
                    "orderid": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "code": "GW00",
                      "message": "The request processed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/capture": {
      "post": {
        "operationId": "payment-capture",
        "summary": "Capture",
        "tags": [
          "Payments - Credit / Debit Cards"
        ],
        "description": "Capture funds previously Pre-Authorized on a credit/debit card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-capture-auth"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "amount": "required",
                    "transaction_id": "required"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-capture-auth"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "amount": "required",
                    "transaction_id": "required"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "code": "GW00",
                      "message": "The request processed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/cash": {
      "post": {
        "operationId": "cash-sale",
        "summary": "Cash (Sale)",
        "tags": [
          "Payments - Cash"
        ],
        "description": "Record a Cash sale",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/cash-saleBody"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-201-cash-sale"
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/debit": {
      "post": {
        "operationId": "ach-sale",
        "summary": "Debit (Sale)",
        "tags": [
          "Payments - ACH / Bank Transfers"
        ],
        "description": "Process an ACH Debit (Sale)",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ach-saleBody"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-200-ach-sale"
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/debit/token": {
      "post": {
        "operationId": "ach-sale-token",
        "summary": "Debit (Sale) - Use a Token",
        "tags": [
          "Payments - ACH / Bank Transfers"
        ],
        "description": "Process an ACH Debit (Sale) with an account token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ach-saleBody"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-200-ach-sale"
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/credit": {
      "post": {
        "operationId": "ach-credit",
        "summary": "Credit (Payout)",
        "tags": [
          "Payments - ACH / Bank Transfers"
        ],
        "description": "Process an ACH Credit",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-ach-credit"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {}
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-ach-credit"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-200-ach-credit-payout"
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/void": {
      "post": {
        "operationId": "ach-void",
        "summary": "Cancel / Void",
        "tags": [
          "Payments - ACH / Bank Transfers"
        ],
        "description": "Cancel / Void an ACH transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-void-ach"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "transaction_id": ""
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-void-ach"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "transaction_id": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "code": "GW00",
                      "message": "The request processed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/refund": {
      "post": {
        "operationId": "ach-refund",
        "summary": "Refund",
        "tags": [
          "Payments - ACH / Bank Transfers"
        ],
        "description": "Refund an ACH Debit transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-ach-refund"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "transaction_id": ""
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/input-ach-refund"
                      }
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "transaction_id": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "code": "GW00",
                      "message": "The request processed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gift/balance": {
      "post": {
        "operationId": "gift-balance",
        "summary": "Check Balance",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "Check the balance of a gift card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "Merchant ID making this request."
                      },
                      "creditcard": {
                        "type": "string",
                        "description": "Provide the gift card account number"
                      },
                      "giftcard": {
                        "type": "integer",
                        "default": 2,
                        "description": "Set default to `2` for balance inquiry.",
                        "minimum": 1,
                        "maximum": 10
                      }
                    },
                    "required": [
                      "mid",
                      "creditcard",
                      "giftcard"
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "creditcard": "",
                    "giftcard": 2
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "Merchant ID making this request."
                      },
                      "creditcard": {
                        "type": "string",
                        "description": "Provide the gift card account number"
                      },
                      "giftcard": {
                        "type": "integer",
                        "default": 2,
                        "description": "Set default to `2` for balance inquiry.",
                        "minimum": 1,
                        "maximum": 10
                      }
                    },
                    "required": [
                      "mid",
                      "creditcard",
                      "giftcard"
                    ]
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "<<mid>>",
                    "creditcard": "",
                    "giftcard": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/gift/sale": {
      "post": {
        "operationId": "gift-sale",
        "summary": "Process Sale",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "process a sale using a gift card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-gift-card-redeem"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "mid": "<<mid>>",
                  "amount": "",
                  "orderid": "",
                  "ipaddress": "",
                  "creditcard": "",
                  "giftcard": 8
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/request-gift-card-redeem"
                      }
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "mid": "<<mid>>",
                  "amount": "",
                  "orderid": "",
                  "ipaddress": "",
                  "creditcard": "",
                  "giftcard": 8
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-gift-card"
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "approved",
                      "code": "GW00",
                      "message": "Card Sale (gift card) was processed successfully.",
                      "transaction_id": "914348921542374360GC",
                      "amount_approved": "1.38",
                      "balance": "0.00",
                      "authcode": "A12346"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gift/refund": {
      "post": {
        "operationId": "gift-refund",
        "summary": "Refund",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "refund a Gift Card transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "Merchant ID making the request"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "transaction_id": {
                        "type": "string"
                      },
                      "giftcard": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "90655454",
                    "amount": "1.5",
                    "creditcard": "5544044490909090",
                    "cvv": "123",
                    "month": "4",
                    "year": "19",
                    "cardfullname": "John Smith",
                    "orderid": "1233123",
                    "ipaddress": "0.0.0.0",
                    "currency": "USD",
                    "bzip": "92838"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "Merchant ID making the request"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "transaction_id": {
                        "type": "string"
                      },
                      "giftcard": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "90655454",
                    "amount": "1.5",
                    "creditcard": "5544044490909090",
                    "cvv": "123",
                    "month": "4",
                    "year": "19",
                    "cardfullname": "John Smith",
                    "orderid": "1233123",
                    "ipaddress": "0.0.0.0",
                    "currency": "USD",
                    "bzip": "92838"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/gift/load": {
      "post": {
        "operationId": "gift-load",
        "summary": "Load Card",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "Load a new or reload an existing Gift Card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "month": {
                        "type": "string"
                      },
                      "year": {
                        "type": "string"
                      },
                      "cardfullname": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "90655454",
                    "amount": "1.5",
                    "creditcard": "5544044490909090",
                    "cvv": "123",
                    "month": "4",
                    "year": "19",
                    "cardfullname": "John Smith",
                    "orderid": "1233123",
                    "ipaddress": "0.0.0.0",
                    "currency": "USD",
                    "bzip": "92838"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "month": {
                        "type": "string"
                      },
                      "year": {
                        "type": "string"
                      },
                      "cardfullname": {
                        "type": "string"
                      },
                      "orderid": {
                        "type": "string"
                      },
                      "ipaddress": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "transaction_data": {
                    "mid": "90655454",
                    "amount": "1.5",
                    "creditcard": "5544044490909090",
                    "cvv": "123",
                    "month": "4",
                    "year": "19",
                    "cardfullname": "John Smith",
                    "orderid": "1233123",
                    "ipaddress": "0.0.0.0",
                    "currency": "USD",
                    "bzip": "92838"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/gift/activate": {
      "post": {
        "operationId": "gift-activate",
        "summary": "Activate Card",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "Activate a new Gift Card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/gift-activateBody"
        },
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/gift/deactivate": {
      "post": {
        "operationId": "gift-deactivate",
        "summary": "De-activate Card",
        "tags": [
          "Payments - Gift Cards"
        ],
        "description": "De-activate an existing Gift Card",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/gift-activateBody"
        },
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/payment/token": {
      "post": {
        "operationId": "token-create",
        "summary": "Create a Payment Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Create and store a payment token with the appropriate credit/debit card information",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "required": [
                      "creditcard",
                      "month",
                      "year",
                      "cardfullname",
                      "baddress",
                      "bzip"
                    ],
                    "properties": {
                      "profile_id": {
                        "type": "string"
                      },
                      "creditcard": {
                        "type": "string"
                      },
                      "month": {
                        "type": "string"
                      },
                      "year": {
                        "type": "string"
                      },
                      "cardfullname": {
                        "type": "string"
                      },
                      "cnickname": {
                        "type": "string"
                      },
                      "baddress": {
                        "type": "string"
                      },
                      "bcity": {
                        "type": "string"
                      },
                      "bstate": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "cvv": {
                        "type": "string"
                      },
                      "store": {
                        "type": "integer",
                        "default": "1"
                      }
                    }
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "creditcard": "5544044490909090",
                    "month": "04",
                    "year": "19",
                    "cardfullname": "John Smith",
                    "baddress": "26776 Tampa Drive",
                    "bcity": "Tampa",
                    "bstate": "FL",
                    "bzip": "33016"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `approved`, `declined` and `error` ",
                      "example": " approved"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Get token was processed successfully"
                    },
                    "token": {
                      "type": "string",
                      "description": "The token that was created",
                      "example": "541341$KR0eAiX2"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "token-update",
        "summary": "Update a Payment Token (exp. date)",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Update a payment token with a new expiration date",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "required": [
                      "token",
                      "last4",
                      "month",
                      "year"
                    ],
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "The token to be updated",
                        "example": "541341$KR0eAiX2"
                      },
                      "last4": {
                        "type": "string",
                        "description": "Last 4 of the credit/debit card",
                        "example": "5413"
                      },
                      "month": {
                        "type": "string",
                        "description": "Example: `02` (mm)",
                        "example": "02"
                      },
                      "year": {
                        "type": "string",
                        "description": "Example: `25` (yy)",
                        "example": "25"
                      }
                    }
                  }
                },
                "required": [
                  "transaction_data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `ok` or `error` ",
                      "example": "approved"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Update token was processed successfully"
                    },
                    "token": {
                      "type": "string",
                      "description": "The token that was updated",
                      "example": "541341$KR0eAiX2"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "token-rotate",
        "summary": "Rotate or Rollback a Payment Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Rotate a payment token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "required": [
                      "token",
                      "last4"
                    ],
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "The token to be rotated",
                        "example": "541341$KR0eAiX2"
                      },
                      "last4": {
                        "type": "string",
                        "description": "Last 4 of the credit/debit card or bank account number",
                        "example": "5413"
                      },
                      "intent": {
                        "type": "string",
                        "description": "Either `rotate` or `rollback` token to previous value (`rollback` can not be undone!)",
                        "enum": [
                          "rotate",
                          "rollback"
                        ],
                        "default": "rotate"
                      }
                    }
                  }
                },
                "required": [
                  "transaction_data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Rotate token was processed successfully"
                    },
                    "token": {
                      "type": "string",
                      "description": "The new token or previous token",
                      "example": "541341$KR0eAiX2"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "token-remove",
        "summary": "Remove / Expire a Payment Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Remove / Expire a payment token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last4",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Remove token was processed successfully"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Remove token was processed successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/token/{token}": {
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "token-fetch",
        "summary": "Fetch a Payment Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Fetch a single payment token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardholder_name": {
                            "type": "string"
                          },
                         "nickname": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "token"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "token": [
                        {
                          "cardholder_name": "John Smith",
                          "nickname": "",
                          "type": "",
                          "phone": "",
                          "email": "",
                          "last_4": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/tokens/{profile_id}": {
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "tokens-fetch",
        "summary": "Fetch Payment Tokens (Profile ID)",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Fetch payment tokens by a Profile ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "profile_id": {
                      "type": "string"
                    },
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                         "nickname": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "profile_id"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "profile_id": "{profile_id}",
                      "tokens": [
                        {
                          "token": "{token}",
                          "cardholder_name": "John Smith",
                          "nickname": "",
                          "type": "",
                          "phone": "",
                          "email": "",
                          "last_4": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/tokens/expiring": {
      "get": {
        "operationId": "tokens-expiring",
        "summary": "Fetch Expiring Payment Tokens (card expiration)",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Fetch payment tokens that the card expiration is next month",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "profile_id": {
                      "type": "string"
                    },
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                         "nickname": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "tokens": [
                        {
                          "token": "{token}",
                          "cardholder_name": "John Smith",
                          "nickname": "",
                          "type": "",
                          "phone": "",
                          "email": "",
                          "last_4": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/token": {
      "post": {
        "operationId": "token-ach",
        "summary": "Create an ACH Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Create and store a token for ACH bank information",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "required": [
                      "account_type",
                      "name_on_account",
                      "account_number",
                      "routing_number"
                    ],
                    "properties": {
                      "profile_id": {
                        "type": "string"
                      },
                      "account_type": {
                        "type": "string"
                      },
                      "name_on_account": {
                        "type": "string"
                      },
                      "cnickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      },
                      "routing_number": {
                        "type": "string"
                      },
                      "baddress": {
                        "type": "string"
                      },
                      "bcity": {
                        "type": "string"
                      },
                      "bstate": {
                        "type": "string"
                      },
                      "bzip": {
                        "type": "string"
                      },
                      "cphone": {
                        "type": "string"
                      },
                      "cemail": {
                        "type": "string"
                      },
                      "store": {
                        "type": "integer",
                        "default": "1"
                      }
                    }
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "profile_id": "",
                    "account_type": "1",
                    "name_on_account": "John Smith",
                    "account_number": "648874774",
                    "routing_number": "122245607",
                    "baddress": "26776 Tampa Drive",
                    "bcity": "Tampa",
                    "bstate": "FL",
                    "bzip": "33016"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `approved`, `declined` and `error` ",
                      "example": " approved"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Get token was processed successfully"
                    },
                    "token": {
                      "type": "string",
                      "description": "The token that was created",
                      "example": "541341$KR0eAiX2"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "token"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/token/{token}": {
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "token-ach-fetch",
        "summary": "Fetch an ACH Token",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Fetch a single ACH token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardholder_name": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "account_type": {
                            "type": "string"
                          },
                          "bank_name": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "token"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "token": [
                        {
                          "cardholder_name": "John Smith",
                          "address": "29727 Tampa Rd",
                          "address2": "",
                          "city": "",
                          "state": "",
                          "zip": "33016",
                          "phone": "",
                          "email": "",
                          "account_type": "1",
                          "bank_name": "",
                          "last_4": "{last_4}"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/tokens/{profile_id}": {
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "tokens-ach-fetch",
        "summary": "Fetch ACH Tokens",
        "tags": [
          "Payment Tokens (tokenization)"
        ],
        "description": "Fetch ACH tokens by a Profile ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "profile_id": {
                      "type": "string"
                    },
                    "token": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardholder_name": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "account_type": {
                            "type": "string"
                          },
                          "bank_name": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "profile_id",
                    "token"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "profile_id": "{profile_id}",
                      "token": [
                        {
                          "cardholder_name": "John Smith",
                          "address": "29727 Tampa Rd",
                          "address2": "",
                          "city": "",
                          "state": "",
                          "zip": "33016",
                          "phone": "",
                          "email": "",
                          "account_type": "1",
                          "bank_name": "",
                          "last_4": "{last_4}"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transaction/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Provide a unique transaction_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-fetch-one",
        "summary": "Fetch a Payment Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Fetch a single payment transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trxn_status": {
                            "type": "string",
                            "description": "Whether or not the tranaction was approved or delined"
                          },
                          "trxn_date": {
                            "type": "string",
                            "description": "The tranasction date and time"
                          },
                          "trxn_type": {
                            "type": "string",
                            "description": "Whether the transaction was a sale, authorization, refund or void"
                          },
                          "trxn_id": {
                            "type": "string",
                            "description": "The unique id of this the transaction"
                          },
                          "payment_type": {
                            "type": "string",
                            "description": "Whether the payment was made via `cc` (credit/debit card), `ach`, or `cash`"
                          },
                          "card_type": {
                            "type": "string",
                            "description": "The brand of the cc (if applicable)"
                          },
                          "amount": {
                            "type": "string",
                            "description": "The amount of the transaction"
                          },
                          "order_id": {
                            "type": "string",
                            "description": "The unique order id assigned to the transaction"
                          },
                          "authcode": {
                            "type": "string",
                            "description": "The authorization code of the approved transaction"
                          },
                          "avs_code": {
                            "type": "string",
                            "description": "The AVS (Address Verification Code) from the issuer for this transaction (if applicable)"
                          },
                          "cv_code": {
                            "type": "string",
                            "description": "The CVV (Card Verification Code) from the issuer for this transaction (if applicable)"
                          },
                          "first_6": {
                            "type": "string",
                            "description": "The first six numbers of the card number or account number"
                          },
                          "last_4": {
                            "type": "string",
                            "description": "The last 4 numbers of the card number or account number"
                          },
                          "settled": {
                            "type": "string",
                            "description": "Whether or not the tranaction has been settled.\n\nPossible response values are `0` or `1`"
                          },
                          "settled_amount": {
                            "nullable": true,
                            "description": "The settled amount"
                          },
                          "settled_date": {
                            "nullable": true,
                            "description": "The date when the transaction was settled"
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "The ip address recorded that requested the transaction (if applicable)"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "data": [
                        {
                          "trxn_status": "approved",
                          "trxn_date": "07-21-2020 10:45 AM",
                          "trxn_type": "sale",
                          "trxn_id": "20253131853973",
                          "payment_type": "cc",
                          "card_type": "mastercard",
                          "amount": "1.19",
                          "order_id": "oid_1tES2kggOe",
                          "authcode": "606334",
                          "avs_code": "BAD (N)",
                          "cv_code": "GOOD (M)",
                          "first_6": "554404",
                          "last_4": "9090",
                          "settled": "0",
                          "settled_amount": null,
                          "settled_date": null,
                          "ip_address": "23.1.1.1"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transactions": {
      "get": {
        "operationId": "transactions-fetch-all",
        "summary": "List Payment Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "List payment transactions and filter by parameters",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "query",
            "description": "Search by transaction_id.\n\nSeparate multiple transaction_id's with a comma.\n\nExample: \"8766546353263, 865756353537\"",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Search for transactions beginning on a particular date. \n\nFormat date as a mm/dd/yy string.\n\nExample: \"01/01/18\"",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "default": ""
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Search for transactions ending on a particular date.\n\nFormat date as a mm/dd/yy string.\n\nExample: \"04/01/18\"",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "A case-sensitive string to return transactions by specific payment type type.\n\n* cc = Credit Card transactions\n* ach = ACH Transactions\n\nYou can return both cc and ach transactions by separating the values with a comma.\n\nExample: \"cc, ach\"",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cc",
                "ach",
                "cc, ach"
              ]
            }
          },
          {
            "name": "trxn_status",
            "in": "query",
            "description": "A case-sensitive string to return transactions by specific status type\n\n* `approved` = Approved transactions\n* `declined` = Declined transactions\n",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 8,
              "enum": [
                "",
                "approved",
                "declined"
              ]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Search for a specific amount. \n\nUse whole numbers and up to two decimals as necessary.\n\n* Example: $12.00 = `\"12\"` or `12.0` or `\"12.00\"`\n* Example: $18.40 = `18.4` or `\"18.40\"`\n* Example: $48.98 = `\"48.98\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount_from",
            "in": "query",
            "description": "Search for a \"from amount\" to return all transactions equal to or greater than value entered. \n\nUse whole numbers and up to two decimals as necessary.\n\n* Example: $12.00 = `\"12\"` or `12.0` or `\"12.00\"`\n* Example: $18.40 = `18.4` or `\"18.40\"`\n* Example: $48.98 = `\"48.98\"`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardholder_name",
            "in": "query",
            "description": "Case sensitive string search for transactions by name on credit card. Partial matches will be returned.\n\nEXAMPLE:  sending `Jer` will return transactions with `cardholder_name` Jerry Simms and also Brenda Jerkins",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 40
            }
          },
          {
            "name": "card_brand",
            "in": "query",
            "description": "Case sensitive string search for transactions by card brand. \n\nValid values are:\n* `visa`\n* `mastercard`\n* `amex`\n* `discover`\n* `jcb`\n* `diners``\n\nYou can return multiple specific card brand combinations by separating the card brand names with a comma.\n\n* Example: `\"visa, amex\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "Case sensitive string search for transactions by `order_id`. \n\nYou can return multiple transactions by separating the order_id with a comma.\n\n* Example: `\"abc-1277645, abc-1387665\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_6",
            "in": "query",
            "description": "Search for transactions matching the first 6 digits of credit card account numbers. \n\nYou can return multiple transactions by separating the first_6 with a comma.\n\n* Example: `\"545454, 454847\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_4",
            "in": "query",
            "description": "Search for transactions matching the last 4 digits of credit card account numbers. \n\nYou can return multiple transactions by separating the last_4 with a comma.\n\nExample: `\"4766, 1287\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return when viewing a page. \n\nThe default limit is 40",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of results to skip before returning results. \n\nThe default offset is 0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_status": {
                                "type": "string"
                              },
                              "trxn_date": {
                                "type": "string"
                              },
                              "trxn_type": {
                                "type": "string"
                              },
                              "trxn_id": {
                                "type": "string"
                              },
                              "cardholder_name": {
                                "type": "string"
                              },
                              "card_type": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "string"
                              },
                              "order_id": {
                                "type": "string"
                              },
                              "authcode": {
                                "type": "string"
                              },
                              "avs_code": {
                                "type": "string"
                              },
                              "cv_code": {
                                "type": "string"
                              },
                              "first_6": {
                                "type": "string"
                              },
                              "last_4": {
                                "type": "string"
                              },
                              "settled": {
                                "type": "string"
                              },
                              "settled_amount": {
                                "nullable": true
                              },
                              "settled_date": {
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": {
                        "count": 2525,
                        "limit": 40,
                        "offset": 0,
                        "transactions": [
                          {
                            "trxn_status": "approved",
                            "trxn_date": "02-17-2018 09:30 AM",
                            "trxn_type": "sale",
                            "trxn_id": "804752225857731",
                            "cardholder_name": "John Smith",
                            "card_type": "visa",
                            "amount": "5.43",
                            "order_id": "733",
                            "authcode": "451930",
                            "avs_code": "BAD (Z)",
                            "cv_code": "GOOD (M)",
                            "first_6": "411111",
                            "last_4": "1111",
                            "settled": "0",
                            "settled_amount": null,
                            "settled_date": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transactions/profile/{profile_id}": {
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-fetch-profile",
        "summary": "List Payment Transactions by a Profile ID",
        "tags": [
          "Transactions"
        ],
        "description": "List payment transactions by a Customer Profile ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "profile_id": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trxn_status": {
                            "type": "string"
                          },
                          "trxn_date": {
                            "type": "string"
                          },
                          "trxn_type": {
                            "type": "string"
                          },
                          "trxn_id": {
                            "type": "string"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                          "card_type": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "order_id": {
                            "type": "string"
                          },
                          "authcode": {
                            "type": "string"
                          },
                          "avs_code": {
                            "type": "string"
                          },
                          "cv_code": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          },
                          "settled": {
                            "type": "string"
                          },
                          "settled_amount": {
                            "nullable": true
                          },
                          "settled_date": {
                            "nullable": true
                          },
                          "metadata": {
                            "nullable": true
                          }
                        }
                      }
                    },
                    "reference_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "profile_id": "",
                      "count": 2,
                      "data": [
                        {
                          "trxn_status": "approved",
                          "trxn_date": "02-17-2018 09:30 AM",
                          "trxn_type": "sale",
                          "trxn_id": "804752225857731",
                          "cardholder_name": "John Smitn",
                          "card_type": "visa",
                          "amount": "5.43",
                          "order_id": "733",
                          "authcode": "451930",
                          "avs_code": "BAD (Z)",
                          "cv_code": "GOOD (M)",
                          "last_4": "1111",
                          "settled": "0",
                          "settled_amount": null,
                          "settled_date": null,
                          "metadata": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transactions/batch/{batch_id}": {
      "parameters": [
        {
          "name": "batch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-fetch-batch",
        "summary": "List Payment Transactions by a Batch ID",
        "tags": [
          "Transactions"
        ],
        "description": "List payment transactions by Batch ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "batch_id": {
                      "type": "string"
                    },
                    "batch_sum": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trxn_status": {
                            "type": "string"
                          },
                          "trxn_date": {
                            "type": "string"
                          },
                          "trxn_type": {
                            "type": "string"
                          },
                          "trxn_id": {
                            "type": "string"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                          "card_type": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "invoice_id": {
                            "type": "string"
                          },
                          "order_id": {
                            "type": "string"
                          },
                          "authcode": {
                            "type": "string"
                          },
                          "avs_code": {
                            "type": "string"
                          },
                          "cv_code": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          },
                          "settled": {
                            "type": "string"
                          },
                          "settled_amount": {
                            "nullable": true
                          },
                          "settled_date": {
                            "nullable": true
                          },
                          "qualified_as": {
                            "nullable": true
                          },
                          "total_interchange": {
                            "nullable": true
                          },
                          "amount_net": {
                            "nullable": true
                          },
                          "metadata": {
                            "nullable": true
                          }
                        }
                      }
                    },
                    "reference_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "trxn_status": "approved",
                          "trxn_date": "02-17-2018 09:30 AM",
                          "trxn_type": "sale",
                          "trxn_id": "804752225857731",
                          "cardholder_name": "John Smitn",
                          "card_type": "visa",
                          "amount": "5.43",
                          "invoice_id": "",
                          "order_id": "733",
                          "authcode": "451930",
                          "avs_code": "BAD (Z)",
                          "cv_code": "GOOD (M)",
                          "last_4": "1111",
                          "settled": "0",
                          "settled_amount": null,
                          "settled_date": null,
                          "metadata": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transactions/mp/batch/{batch_id}": {
      "parameters": [
        {
          "name": "batch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-fetch-mpbatch",
        "summary": "List MarketPlace Payment Transactions by a Batch ID",
        "tags": [
          "Transactions"
        ],
        "description": "List MarketPlace payment transactions by Batch ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "batch_id": {
                      "type": "string"
                    },
                    "batch_sum": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trxn_status": {
                            "type": "string"
                          },
                          "trxn_date": {
                            "type": "string"
                          },
                          "trxn_type": {
                            "type": "string"
                          },
                          "trxn_id": {
                            "type": "string"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                          "card_type": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "tid": {
                            "type": "string"
                          },
                          "invoice_id": {
                            "type": "string"
                          },
                          "order_id": {
                            "type": "string"
                          },
                          "authcode": {
                            "type": "string"
                          },
                          "avs_code": {
                            "type": "string"
                          },
                          "cv_code": {
                            "type": "string"
                          },
                          "last_4": {
                            "type": "string"
                          },
                          "settled": {
                            "type": "string"
                          },
                          "settled_amount": {
                            "nullable": true
                          },
                          "settled_date": {
                            "nullable": true
                          },
                          "qualified_as": {
                            "nullable": true
                          },
                          "total_interchange": {
                            "nullable": true
                          },
                          "amount_net": {
                            "nullable": true
                          },
                          "metadata": {
                            "nullable": true
                          }
                        }
                      }
                    },
                    "reference_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "trxn_status": "approved",
                          "trxn_date": "02-17-2018 09:30 AM",
                          "trxn_type": "sale",
                          "trxn_id": "804752225857731",
                          "cardholder_name": "John Smitn",
                          "card_type": "visa",
                          "amount": "5.43",
                          "tid": "1011",
                          "invoice_id": "",
                          "order_id": "733",
                          "authcode": "451930",
                          "avs_code": "BAD (Z)",
                          "cv_code": "GOOD (M)",
                          "last_4": "1111",
                          "settled": "0",
                          "settled_amount": null,
                          "settled_date": null,
                          "metadata": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ach/transaction/{transaction_id}": {
      "parameters": [
        {
          "name": "transaction_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-fetch-ach-one",
        "summary": "Fetch an ACH Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Fetch a single ACH transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/ach/transactions": {
      "get": {
        "operationId": "transactions-ach-fetch-all",
        "summary": "List ACH Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "List ACH transactions and filter by parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qoRAppIdAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorClientIdAuthentication_Qor-Client-Key"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/payment/transaction/proof_of_delivery/": {
      "post": {
        "operationId": "transactions-pod-create",
        "summary": "Create a Proof of Delivery (POD) / Service record",
        "tags": [
          "Transactions"
        ],
        "description": "Create and link a Proof of Delivery (POD) / Service record to a sale",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trxn_id": {
                    "type": "string",
                    "description": "Provide the transaction ID to associate to this POD"
                  },
                  "shipper": {
                    "type": "integer",
                    "description": "Provide an integer corrosponding to the shipper.\n\n* **1** = USPS\n* **2** = FedEx\n* **3** = UPS\n* **4** = DHL\n* **5** = Other",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "tracking_no": {
                    "type": "string",
                    "description": "Provide shipper tracking number",
                    "maxLength": 50
                  },
                  "delivery_date": {
                    "type": "string",
                    "description": "Provide the actual or expected Delivery Date\n\nFormat is `YYYY-MM-DD`",
                    "maxLength": 10
                  }
                },
                "required": [
                  "trxn_id"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "trxn_id": {
                    "type": "string",
                    "description": "Provide the transaction ID to associate to this POD"
                  },
                  "shipper": {
                    "type": "integer",
                    "description": "Provide an integer corrosponding to the shipper.\n\n* **1** = USPS\n* **2** = FedEx\n* **3** = UPS\n* **4** = DHL\n* **5** = Other",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "tracking_no": {
                    "type": "string",
                    "description": "Provide shipper tracking number",
                    "maxLength": 50
                  },
                  "delivery_date": {
                    "type": "string",
                    "description": "Provide the actual or expected Delivery Date\n\nFormat is `YYYY-MM-DD`",
                    "maxLength": 10
                  }
                },
                "required": [
                  "trxn_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "pofs_id": {
                          "type": "string",
                          "description": "The Proof of Delivery / Service ID created for this endpoint"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "result": {
                        "insertedID": "pofs_22d2d29056f511e9924d0afd24307790"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "transactions-pod-update",
        "summary": "Update a Proof of Delivery / Service record",
        "tags": [
          "Transactions"
        ],
        "description": "Update a Proof of Delivery (POD) / Service record",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pofs_id": {
                    "type": "string",
                    "description": "Provide the POD unique identifier.\n\nBegins with `pofs_id`"
                  },
                  "trxn_id": {
                    "type": "string",
                    "description": "Update the transaction ID to associate to this POD"
                  },
                  "shipper": {
                    "type": "integer",
                    "description": "Update the integer corrosponding to the shipper.\n\n* **1** = USPS\n* **2** = FedEx\n* **3** = UPS\n* **4** = DHL\n* **5** = Other",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "tracking_no": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Update the tracking number provided by the shipper"
                  },
                  "delivery_date": {
                    "type": "string",
                    "description": "Provide the actual or expected Delivery Date\n\nFormat is `YYYY-MM-DD`",
                    "maxLength": 10
                  }
                },
                "required": [
                  "pofs_id"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "pofs_id": {
                    "type": "string",
                    "description": "Provide the POD unique identifier.\n\nBegins with `pofs_id`"
                  },
                  "trxn_id": {
                    "type": "string",
                    "description": "Update the transaction ID to associate to this POD"
                  },
                  "shipper": {
                    "type": "integer",
                    "description": "Update the integer corrosponding to the shipper.\n\n* **1** = USPS\n* **2** = FedEx\n* **3** = UPS\n* **4** = DHL\n* **5** = Other",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "tracking_no": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Update the tracking number provided by the shipper"
                  },
                  "delivery_date": {
                    "type": "string",
                    "description": "Provide the actual or expected Delivery Date\n\nFormat is `YYYY-MM-DD`",
                    "maxLength": 10
                  }
                },
                "required": [
                  "pofs_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "rowsAffected": {
                          "type": "string"
                        },
                        "rowsChanged": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "result": {
                        "rowsAffected": "0",
                        "rowsChanged": "0"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "transactions-pod-query",
        "summary": "List Proof of Delivery (POD) records",
        "tags": [
          "Transactions"
        ],
        "description": "Query for Proof of Delivery (POD) / Service records",
        "parameters": [
          {
            "name": "pofs_id",
            "in": "query",
            "description": "The POD unique identifier.  Begins with `pofs-`",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "trxn_id",
            "in": "query",
            "description": "The unique transaction identifier associated to this POD.  \n\nSeparate multiple `trxn_id` as a string with commas.  Example: `\"98773837463622, 9837343243822`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipper",
            "in": "query",
            "description": "Query POD by shipper.  Values are:\n\n* `1` = USPS\n* `2` = FedEx\n* `3` = UPS\n* `4` = DHL\n* `5` = Other",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tracking_no",
            "in": "query",
            "description": "The shipper tracking number to this POD",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delivery_date",
            "in": "query",
            "description": "The delivery date associated to this POD.  Format is `YYYY-MM-DD`.  \n\nQuery multiple delivery dates in a string separated by a comma.  \n\nExample `\"2019-05-05, 2019-05-06\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Proof of Delivery / Service ID"
                          },
                          "trxn_id": {
                            "type": "string",
                            "description": "The transaction ID assocaited with the POD"
                          },
                          "shipper": {
                            "type": "integer",
                            "description": "The shipper associated with the Proof of Delivery.\n\n* `1` = USPS\n* `2` = FedEx\n* `3` = UPS\n* `4` = DHL\n* `5` = Other"
                          },
                          "tracking_no": {
                            "type": "string",
                            "description": "The shipper tracking number associated to this POD"
                          },
                          "delivery_date": {
                            "type": "string",
                            "description": "The delivery date assocaited with to this POD"
                          },
                          "modified": {
                            "type": "string"
                          },
                          "created": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "id": "pofs_6ea862c054ef11e9924d0afd24307790",
                          "trxn_id": "834178422878942",
                          "shipper": 2,
                          "tracking_no": "123456",
                          "delivery_date": "2019-03-13T00:00:00.000Z",
                          "modified": "04-01-2019 07:37 PM",
                          "created": "04-01-2019 07:31 PM"
                        },
                        {
                          "id": "pofs_22d2d29056f511e9924d0afd24307790",
                          "trxn_id": "909354165100686",
                          "shipper": 1,
                          "tracking_no": "12345",
                          "delivery_date": "2019-05-05T00:00:00.000Z",
                          "modified": "04-04-2019 09:17 AM",
                          "created": "04-04-2019 09:17 AM"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/transaction/proof_of_delivery/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Provide the Proof of Delivery (POD) / Service ID.  Begins with `pofs-`",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "transactions-pod-fetch",
        "summary": "Fetch a Proof of Delivery (POD) / Service record",
        "tags": [
          "Transactions"
        ],
        "description": "Fetch a single Proof of Delivery / Service record",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Proof of Delivery / Service ID"
                          },
                          "trxn_id": {
                            "type": "string",
                            "description": "The transaction ID associated to this POD"
                          },
                          "shipper": {
                            "type": "integer",
                            "description": "The shipper associated to this POD.\n\n* **1** = USPS\n* **2** = FedEx\n* **3** = UPS\n* **4** = DHL\n* **5** = Other\n\n"
                          },
                          "tracking_no": {
                            "type": "string",
                            "description": "The shipper Tracking Number associated to this POD"
                          },
                          "delivery_date": {
                            "type": "string",
                            "description": "The delivery date assoicated to this POD"
                          },
                          "modified": {
                            "type": "string"
                          },
                          "created": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "id": "pofs_6ea862c054ef11e9924d0afd24307790",
                          "trxn_id": "834178422878942",
                          "shipper": 2,
                          "tracking_no": "123456",
                          "delivery_date": "03-13-2019",
                          "modified": "04-01-2019 07:37 PM",
                          "created": "04-01-2019 07:31 PM"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "transactions-pod-remove",
        "summary": "Remove a Proof of Delivery  record",
        "tags": [
          "Transactions"
        ],
        "description": "Remove a Proof of Delivery / Service record",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "rowsAffected": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "result": {
                        "rowsAffected": "1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refleqtion": {
      "post": {
        "operationId": "refleqtion",
        "summary": "Import transactions and their corresponding results",
        "tags": [
          "Refleqtion"
        ],
        "description": "Refleqtion is intended to allow the ISV / Merchant supply transactions and their corresponding results that have been processed by an external processor",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/input-refleqtion-Body"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-201-refleqtion"
                }
              }
            }
          }
        }
      } 
    },
    "/customers": {
      "post": {
        "operationId": "customers-create",
        "summary": "Create a Customer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "customers-update",
        "summary": "Update a Customer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "customers-list",
        "summary": "List Customers",
        "tags": [
          "Customers"
        ],
        "description": "Fetch a list of customers",
        "parameters": [
          {
            "name": "cust_id",
            "in": "query",
            "description": "Search for customer by `id`.  Separate multiple id filters with a `,` (comma).  \n\n**Example:**  `635, 732`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "Case-insensitive search for customers by first name.  Separate multiple first_name filters with a `,` (comma).  \n\n**Example:** `\"James, Sally, Mitch\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Case-insensitive search for customers by last name.  Separate multiple last_name filters with a `,` (comma). \n\n**Example:** `\"Brown, O'Brein, Contenelli\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Case-insensitive search for customers by street address.  Partial input allowed.  \n\n**Example:** `Main` will return all customers that have **Main** in their street address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address2",
            "in": "query",
            "description": "Case-insensitive search for customers by second street address.  Partial input allowed.  \n\n**Example:** `Apt` will return all customers that have **Apt** in their secondary street address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Case-insensitive search for customers by city name.  Separate multiple city name filters with a `,` (comma).  \n\n**Example:** `\"Los Angeles, Miami, Lake Arrowhead\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Case-insensitive search for customers by ISO 2-digit state code.  Separate multiple state code filters with a `,` (comma).  \n\n**Example, `\"CA, MN, GA\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "customer address zip code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Case-insensitive search for customers by ISO 2-digit country code.  Separate multiple country code filters with a `,` (comma).  \n\n**Example:** `\"US, CA, RD\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Case-insensitive search for customers by email address.  Partial input allowed.  For example, `example.com` will return all customers that have **example.com** in their email address. Separate multiple email filters with a `,` (comma).  \n\n**Example:**  `\"example.com, sally@company.com, .net\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "Case-insensitive search for customers by phone number.  Partial input allowed.  \n\n**Example:** `213` will return all customers that have **213** in their phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_name",
            "in": "query",
            "description": "Case-insensitive search for customers by company name.  Partial matches provided. For example, `bro` will return all customers that have **bro** in their their company name.  Separate multiple company_name filters with a `,` (comma).  \n\n**Example:** `\"bro, Acme Plumbing, Hatfield & McCoy\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "web_address",
            "in": "query",
            "description": "Case-insensitive search for customers by website address.  Partial matches provided. For example, `jan` will return all customers that have **jan** in their their website address.  Separate multiple web_address filters with a `,` (comma).  \n\n**Example:** `\"jan, example.com\"`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cust_id": {
                            "type": "string"
                          },
                          "created": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "company_name": {
                            "type": "string"
                          },
                          "web_address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "cust_id": "cust_8cd9fa760b6711e9b9ce0afd24307791",
                          "created": "11-22-2018 08:58 AM",
                          "first_name": "John",
                          "last_name": "Smith",
                          "address": "29727 Niguel Rd",
                          "address2": "Apt 201B",
                          "city": "Laguna Niguel",
                          "state": "CA",
                          "zip": "92677",
                          "country": "USA",
                          "email": "john@company.com",
                          "phone_number": "9494783686",
                          "company_name": "",
                          "web_address": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the customer you want to fetch.\n\nValue can be a string or integer.",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 12
          }
        }
      ],
      "get": {
        "operationId": "customers-fetch",
        "summary": "Fetch a Customer",
        "tags": [
          "Customers"
        ],
        "description": "Fetch a single customer record",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "created": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "company_name": {
                            "type": "string"
                          },
                          "web_address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": [
                        {
                          "id": 2,
                          "created": "11-29-2018 03:42 AM",
                          "first_name": "Jerry",
                          "last_name": "Smith",
                          "address": "26776 Chesterton Drive",
                          "address2": "",
                          "city": "",
                          "state": "",
                          "zip": "46280",
                          "country": "",
                          "email": "",
                          "phone_number": "",
                          "company_name": "",
                          "web_address": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "operationId": "customers-remove",
        "summary": "Remove a Customer",
        "tags": [
          "Customers"
        ],
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/plans": {
      "post": {
        "operationId": "plans-create",
        "summary": "Create a Plan",
        "tags": [
          "Subscriptions / Plans"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "plans-list",
        "summary": "List Plans",
        "tags": [
          "Subscriptions / Plans"
        ],
        "description": "List plans and filter by parameters",
        "parameters": [
          {
            "name": "plan_id",
            "in": "query",
            "description": "Provide the contract plan_id.  Separate multiple plans with a comma.\n\n**Example:** \n* `plan_1`\n* `plan_1,plan_2,plan_3` ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "card_fullname",
            "in": "query",
            "description": "provide the the full name provided on the card associated with this plan",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_4",
            "in": "query",
            "description": "Provide the last 4 numbers of the card associated with a plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Provide the amount charged per payment period for the plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "plans": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "plan_id": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              },
                              "last_run": {
                                "type": "string"
                              },
                              "trxn_count": {
                                "type": "integer"
                              },
                              "card_fullname": {
                                "type": "string"
                              },
                              "last_4": {
                                "type": "string"
                              },
                              "plan_start": {
                                "type": "string"
                              },
                              "plan_end": {
                                "type": "string"
                              },
                              "period": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": {
                        "count": 1,
                        "limit": 40,
                        "offset": 0,
                        "plans": [
                          {
                            "plan_id": "plan_0c6038ea1cc211e9b9ce0afd24307790",
                            "created": "01-20-2019 09:45 AM",
                            "last_run": "01-21-2019 11:24 AM",
                            "trxn_count": 2,
                            "card_fullname": "John Smith",
                            "last_4": "9090",
                            "plan_start": "12212018",
                            "plan_end": "06212019",
                            "period": "2",
                            "amount": 2.36
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "operationId": "plans-update",
        "summary": "Update a Plan",
        "tags": [
          "Subscriptions / Plans"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "plans-fetch",
        "summary": "Fetch a Subscription / Plan",
        "tags": [
          "Subscriptions / Plans"
        ],
        "description": "Fetch a single subscription / plan by `plan_id`",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "plan": {
                          "type": "object",
                          "properties": {
                            "plan_id": {
                              "type": "string"
                            },
                            "created": {
                              "type": "string"
                            },
                            "last_run": {
                              "type": "string"
                            },
                            "trxn_count": {
                              "type": "integer"
                            },
                            "card_fullname": {
                              "type": "string"
                            },
                            "last_4": {
                              "type": "string"
                            },
                            "plan_start": {
                              "type": "string"
                            },
                            "plan_end": {
                              "type": "string"
                            },
                            "period": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": {
                        "plan": {
                          "plan_id": "plan_0c6038ea1cc211e9b9ce0afd24307790",
                          "created": "01-20-2019 09:45 AM",
                          "last_run": "01-21-2019 11:24 AM",
                          "trxn_count": 2,
                          "card_fullname": "John Smith",
                          "last_4": "9090",
                          "plan_start": "12212018",
                          "plan_end": "06212019",
                          "period": "2",
                          "amount": 2.36
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "plans-remove",
        "summary": "Remove a Plan",
        "tags": [
          "Subscriptions / Plans"
        ],
        "description": "Remove a subscription / plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Remove plan was processed successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/disputes": {
      "get": {
        "operationId": "disputes-fetch",
        "summary": "Fetch Disputes",
        "tags": [
          "Disputes"
        ],
        "description": "A dispute occurs when a customer questions your charge with their card issuer. When this happens, you're given the opportunity to respond to the dispute with evidence that shows that the charge is legitimate",
        "parameters": [
          {
            "name": "show_trxns",
            "in": "query",
            "description": "Indicates whether or not to show the original transactions associated to each dispute.",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Indicates which specific status the request will search for.\n\nPossible request values are `open`, `disputed`, `won` or `lost`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "total_disputes": {
                          "type": "integer"
                        },
                        "disputes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dispute_id": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              },
                              "cycle": {
                                "type": "string"
                              },
                              "ARN": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "reason_description": {
                                "type": "string"
                              },
                              "dispute_amount": {
                                "type": "string"
                              },
                              "trxn_data": {
                                "type": "object",
                                "properties": {
                                  "trxn_id": {
                                    "type": "string"
                                  },
                                  "trxn_date": {
                                    "type": "string"
                                  },
                                  "trxn_amount": {
                                    "type": "string"
                                  },
                                  "refunded_amount": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "avs": {
                                    "type": "string"
                                  },
                                  "cvv": {
                                    "type": "string"
                                  },
                                  "cardfullname": {
                                    "type": "string"
                                  },
                                  "address1": {
                                    "type": "string"
                                  },
                                  "address2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "zip": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "total_disputes": 0,
                        "disputes": [
                          {
                            "dispute_id": "",
                            "created": "",
                            "cycle": "",
                            "ARN": "",
                            "status": "",
                            "reason": "",
                            "reason_description": "",
                            "dispute_amount": "",
                            "trxn_data": {
                              "trxn_id": "",
                              "trxn_date": "",
                              "trxn_amount": "",
                              "refunded_amount": "",
                              "card_number": "",
                              "avs": "",
                              "cvv": "",
                              "cardfullname": "",
                              "address1": "",
                              "address2": "",
                              "city": "",
                              "state": "",
                              "zip": "",
                              "email": "",
                              "phone": ""
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/ach/disputes": {
      "get": {
        "operationId": "disputes-ach",
        "summary": "Fetch ACH Disputes",
        "tags": [
          "Disputes"
        ],
        "description": "A dispute occurs when a customer questions your debit/transfer with their bank. When this happens, you're given the opportunity to respond to the dispute with evidence that shows that the transfer is legitimate",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "total_disputes": {
                          "type": "integer"
                        },
                        "disputes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dispute_id": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              },
                              "cycle": {
                                "type": "string"
                              },
                              "ARN": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "reason_description": {
                                "type": "string"
                              },
                              "dispute_amount": {
                                "type": "string"
                              },
                              "trxn_data": {
                                "type": "object",
                                "properties": {
                                  "trxn_id": {
                                    "type": "string"
                                  },
                                  "trxn_date": {
                                    "type": "string"
                                  },
                                  "trxn_amount": {
                                    "type": "string"
                                  },
                                  "refunded_amount": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "avs": {
                                    "type": "string"
                                  },
                                  "cvv": {
                                    "type": "string"
                                  },
                                  "cardfullname": {
                                    "type": "string"
                                  },
                                  "address1": {
                                    "type": "string"
                                  },
                                  "address2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "zip": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "total_disputes": 0,
                        "disputes": [
                          {
                            "dispute_id": "",
                            "created": "",
                            "cycle": "",
                            "ARN": "",
                            "status": "",
                            "reason": "",
                            "reason_description": "",
                            "dispute_amount": "",
                            "trxn_data": {
                              "trxn_id": "",
                              "trxn_date": "",
                              "trxn_amount": "",
                              "refunded_amount": "",
                              "card_number": "",
                              "avs": "",
                              "cvv": "",
                              "cardfullname": "",
                              "address1": "",
                              "address2": "",
                              "city": "",
                              "state": "",
                              "zip": "",
                              "email": "",
                              "phone": ""
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "deposit-fetch",
        "summary": "Fetch a Deposit / Payout",
        "tags": [
          "Deposits / Payouts"
        ],
        "description": "A deposit / payout is when you receive funds from <<company_name>>. You can retrieve an individual deposit / payout. Deposits are made on varying schedules, depending on your payout schedule and industry.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deposit_id": {
                          "type": "string"
                        },
                        "account": {
                          "type": "string"
                        },
                        "date_requested": {
                          "type": "string"
                        },
                        "date_processed": {
                          "type": "string"
                        },
                        "amount_requested": {
                          "type": "string"
                        },
                        "amount_approved": {
                          "type": "string"
                        },
                        "orig_trxns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_id": {
                                "type": "string"
                              },
                              "settled_date": {
                                "type": "integer"
                              },
                              "order_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "deposit_id": "",
                        "account": "",
                        "date_requested": "",
                        "date_processed": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposits/{year}/{status}": {
      "parameters": [
        {
          "name": "year",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "status",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "deposits-fetch",
        "summary": "Fetch Deposits / Payouts",
        "tags": [
          "Deposits / Payouts"
        ],
        "description": "A deposit is when you receive funds from <<company_name>>. You can retrieve individual deposits, as well as list all deposits. Deposits are made on varying schedules, depending on your payout schedule and industry.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deposit_id": {
                            "type": "string"
                          },
                          "account": {
                            "type": "string"
                          },
                          "date_requested": {
                            "type": "string"
                          },
                          "date_processed": {
                            "type": "string"
                          },
                          "amount_requested": {
                            "type": "string"
                          },
                          "amount_approved": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": [
                        {
                          "deposit_id": "",
                          "account": "",
                          "date_requested": "",
                          "date_processed": "",
                          "amount_requested": "",
                          "amount_approved": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/detail/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "deposits-fetch-detail",
        "summary": "Fetch Deposit detail",
        "tags": [
          "Deposits / Payouts"
        ],
        "description": "Fetch Deposit detail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deposit_id": {
                          "type": "string"
                        },
                        "account": {
                          "type": "string"
                        },
                        "date_requested": {
                          "type": "string"
                        },
                        "date_processed": {
                          "type": "string"
                        },
                        "amount_requested": {
                          "type": "string"
                        },
                        "amount_approved": {
                          "type": "string"
                        },
                        "orig_trxns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_id": {
                                "type": "string"
                              },
                              "settled_date": {
                                "type": "integer"
                              },
                              "order_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "detail": {
                          "type": "object",
                          "properties": {
                            "Amount": {
                              "type": "string"
                            },
                            "Sales": {
                              "type": "string"
                            },
                            "Refunds": {
                              "type": "string"
                            },
                            "Chargebacks/Disputes": {
                              "type": "string"
                            },
                            "Fees": {
                              "type": "string"
                            },
                            "Withdrawal Failure(s)": {
                              "type": "string"
                            },
                            "Sent to Reserve": {
                              "type": "string"
                            },
                            "Rollover from last Deposit": {
                              "type": "string"
                            },
                            "Cancelled Refunds": {
                              "type": "string"
                            },
                            "Not part of Deposit": {
                              "type": "string"
                            },
                            "Daily": {
                              "type": "string"
                            },
                            "Monthly": {
                              "type": "string"
                            },
                            "Authorizations": {
                              "type": "string"
                            },
                            "Captures": {
                              "type": "string"
                            },
                            "Retrievals": {
                              "type": "string"
                            },
                            "Settlement": {
                              "type": "string"
                            },
                            "Interchange": {
                              "type": "string"
                            },
                            "Entry Refund(s)": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "deposit_id": "",
                        "account": "",
                        "date_requested": "",
                        "date_processed": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ],
                        "detail": {
                          "Amount": "",
                          "Sales": "",
                          "Refunds": "",
                          "Chargebacks/Disputes": "",
                          "Fees": "",
                          "Withdrawal Failure(s)": "",
                          "Sent to Reserve": "",
                          "Rollover from last Deposit": "",
                          "Cancelled Refunds": "",
                          "Not part of Deposit": "",
                          "Daily": "",
                          "Monthly": "",
                          "Authorizations": "",
                          "Captures": "",
                          "Retrievals": "",
                          "Settlement": "",
                          "Interchange": "",
                          "Entry Refund(s)": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook": {
      "post": {
        "operationId": "webhooks-create",
        "summary": "Create a Webhook",
        "tags": [
          "Webhooks"
        ],
        "description": "Create a webhook event",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of your event"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The uri that will receive the webhook message"
                      },
                      "event": {
                        "type": "string",
                        "description": "Webhook event (see below)",
                        "enum": ["sale.approved","sale.declined","auth.approved","auth.declined","capture.approved","capture.declined","refund.approved","refund.declined","void.approved","void.declined","dispute.new","dispute.won","dispute.lost","dispute.closed","deposit.new","boarded.approved","boarded.declined"]
                      },
                      "content_type": {
                        "type": "string",
                        "enum": ["application/json"]
                      },
                      "header_key": {
                        "type": "string"
                      },
                      "header_value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mid",
                      "name",
                      "uri",
                      "event"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "name": "",
                    "uri": "",
                    "event": "",
                    "content_type": "",
                    "header_key": "",
                    "header_value": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Webhook successfully created"
                    },
                    "id": {
                      "type": "string",
                      "description": "The webhook id of the created event",
                      "example": "hook_af67a911391711e9924d0afd24307790"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "webhooks-update",
        "summary": "Update a Webhook",
        "tags": [
          "Webhooks"
        ],
        "description": "Update a webhook event",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "hook_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of your event"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The uri that will receive the webhook message"
                      },
                      "active": {
                        "type": "string"
                      },
                      "run_pause": {
                        "type": "string"
                      },
                      "content_type": {
                        "type": "string",
                        "enum": ["application/json"]
                      },
                      "header_key": {
                        "type": "string"
                      },
                      "header_value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook_id"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                    "mid": "",
                    "name": "",
                    "uri": "",
                    "event": "",
                    "active": "",
                    "content_type": "",
                    "header_key": "",
                    "header_value": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Webhook successfully updated"
                    },
                    "id": {
                      "type": "string",
                      "description": "The webhook id of the updated event",
                      "example": "hook_af67a911391711e9924d0afd24307790"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "webhooks_list",
        "summary": "Fetch Webhooks",
        "tags": [
          "Webhooks"
        ],
        "description": "Fetch webhooks and filter by type",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Provide the type of the webhook.  Separate multiple webhook event types with a comma.\n\n**Example:** \n* `sale.approved`\n* `sale.approved,sale.declined` ",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "The request successfully processed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "webhooks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "webhook_id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "endpoint": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": {
                        "count": 1,
                        "limit": 40,
                        "offset": 0,
                        "webhooks": [
                          {
                            "webhook_id": "web_0c6038ea1cc211e9b9ce0afd24307790",
                            "type": "sale,approved",
                            "endpoint": "mywebhook.com",
                            "created": "01-20-2019 09:45 AM"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook/{hook_id}": {
      "parameters": [
        {
          "name": "hook_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "The webhook id to remove"
          }
        }
      ],
      "delete": {
        "operationId": "webhooks-remove",
        "summary": "Remove a Webhook",
        "tags": [
          "Webhooks"
        ],
        "description": "Remove a Webhook event",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Webhook successfully removed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/forms": {
      "get": {
        "operationId": "payment-forms-fetch",
        "summary": "Fetch Payment Forms (linq templates)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Form ID (to be used in the **Create Payment Form** endpoint)"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name/Alias of this form"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Form Data Loaded",
                      "data": [
                        { 
                          "id": "form_drakxkkljl4tfsp06w3jzf",
                          "name": "Hosted Test 1"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/form/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Provide payment form id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "payment-form-fetch",
        "summary": "Fetch Payment Form (linq template)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/payment/linq": {
      "post": {
        "operationId": "forms-linq",
        "summary": "Create a Payment Form (linq)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "the merchant id assigned by QorCommerce or your merchant service provider (MSP)"
                      },
                      "form_id": {
                        "type": "string",
                        "description": "Form template id you would like to use from the **Fetch Payment Forms (linq templates)** endpoint"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for this order. If left blank, this will be left off the form",
                        "default": "Online Payment Linq for John Doe"
                      },
                      "expires": {
                        "type": "integer",
                        "description": "Expiration time for this linq. Possible values are 1 day (86400), 1 week (604800) or 1 month (2592000) or a time in seconds of your choice",
                        "default": 604800
                      },
                      "amount": {
                        "type": "string",
                        "description": "The total amount to process"
                      },
                      "order_id": {
                        "type": "string",
                        "description": "Unique merchant order tracking number"
                      },
                      "po_number": {
                        "type": "string",
                        "description": "Unique purchase order tracking number"
                      },
                      "via": {
                        "type": "string",
                        "description": "Whether you intend to send this linq via `SMS` or `Email`",
                        "enum": ["sms","email"],
                        "default": "email"
                      }
                    },
                    "required": [
                      "mid",
                      "form_id",
                      "description",
                      "amount"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Payment Linq successfully created"
                    },
                    "data": {
                      "type": "string",
                      "description": "The http link for this payment form that you can send to a customer for online payment",
                      "example": "https://..."
                    },
                    "request_id": {
                      "type": "string",
                      "description": "The request id for this payment form - this is used in the **Send Payment Form Linq** endpoint",
                      "example": "req_..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/linq_qrcode": {
      "post": {
        "operationId": "forms-linq-qr",
        "summary": "Create a Payment Form (QR Code linq)",
        "tags": [
          "Payment Form (linq)"
        ],
        "description": "Present to your customer a QR Code that links them to your customized checkout page",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "mid": {
                        "type": "string",
                        "description": "the merchant id assigned by QorCommerce or your merchant service provider (MSP)"
                      },
                      "form_id": {
                        "type": "string",
                        "description": "Form template id you would like to use from the **Get Payment Forms Linq** endpoint.\n If omitted then system will use the merchants default form setup in Checkout & Receipts"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for this order. If left blank, this will be left off the form",
                        "default": "Online Payment Linq for John Doe"
                      },
                      "expires": {
                        "type": "integer",
                        "description": "Expiration time for this linq. Possible values are 1 day (86400), 1 week (604800) or 1 month (2592000) or a time in seconds of your choice",
                        "default": 604800
                      },
                      "amount": {
                        "type": "string",
                        "description": "The total amount to process"
                      },
                      "order_id": {
                        "type": "string",
                        "description": "Unique merchant order tracking number"
                      },
                      "po_number": {
                        "type": "string",
                        "description": "Unique purchase order tracking number"
                      },
                      "via": {
                        "type": "string",
                        "description": "Whether you intend to send this linq via `SMS` or `Email`",
                        "enum": ["sms","email"],
                        "default": "email"
                      }
                    },
                    "required": [
                      "mid",
                      "description",
                      "amount"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Payment Linq successfully created"
                    },
                    "request_id": {
                      "type": "string",
                      "description": "The request id for this payment form - this is used in the **Send Payment Form Linq** endpoint",
                      "example": "req_..."
                    },
                    "shortUrl": {
                      "type": "string",
                      "description": "The short url link for this payment form that you can send to a customer for online payment",
                      "example": "https://..."
                    },
                    "shortUrl_QRCode": {
                      "type": "string",
                      "description": "The short url QR Code link for this payment form. Simply render this linq or use it as the `src` for an `img` tag.",
                      "example": "https://..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/linq/send": {
      "post": {
        "operationId": "forms-linq-send",
        "summary": "Send Payment Form (linq via sms / email)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_data": {
                    "type": "object",
                    "properties": {
                      "request_id": {
                        "type": "string",
                        "description": "The request_id returned by the **Create a Payment Form Linq** endpoint"
                      },
                      "via": {
                        "type": "string",
                        "description": "Whether to send this linq via `SMS` or `Email`",
                        "enum": ["sms","email"]
                      },
                      "mobile_number": {
                        "type": "string",
                        "description": "Phone number to send an SMS Payment Linq to (required if via = `sms`)"
                      },
                      "emails": {
                        "type": "string",
                        "description": "Separate multiple email addresses with a comma (required if via = `email`)"
                      },
                      "link": {
                        "type": "string",
                        "description": "The http link for this payment form returned by the **Create Payment Form Linq** endpoint"
                      }
                    },
                    "required": [
                      "request_id",
                      "via",
                      "link"
                    ]
                  }
                },
                "required": [
                  "transaction_data"
                ],
                "example": {
                  "transaction_data": {
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` or `error` ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Payment Linq successfully sent"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/linqs": {
      "get": {
        "operationId": "forms-linqs-fetch",
        "summary": "Fetch Payment Form (linqs)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status.\n\nPossible values are `created`, `approved` or `declined` ",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 8
            }
          },
          {
            "name": "linq_type",
            "in": "query",
            "description": "Filter by linq type.\n\nPossible values are `sms` or `email` ",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 5
            }
          },
          {
            "name": "order_number",
            "in": "query",
            "description": "Filter by order number.",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 25
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "description": "Filter by invoice number.",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 25
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are 'ok' or 'error' ",
                      "example": "ok"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
                      "example": "GW00"
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message.",
                      "example": "Request was processed successfully"
                    },
                    "total": {
                      "type": "string",
                      "description": ""
                    },
                    "limit": {
                      "type": "string",
                      "description": ""
                    },
                    "skip": {
                      "type": "string",
                      "description": ""
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": ""
                          },
                          "key": {
                            "type": "string",
                            "description": ""
                          },
                          "request_id": {
                            "type": "string",
                            "description": ""
                          },
                          "token": {
                            "type": "string",
                            "description": ""
                          },
                          "process_amount": {
                            "type": "string",
                            "description": ""
                          },
                          "request_data": {
                            "type": "object",
                            "properties": {
                              "amounts": {
                                "type": "object",
                                "properties": {
                                  "process_amount": {
                                    "type": "string"
                                  }
                                }
                              },
                              "details": {
                                "type": "object",
                                "properties": {
                                  "order_number": {
                                    "type": "string"
                                  }
                                }
                              },            
                              "expires": {
                                "type": "integer"
                              },
                              "is_test": {
                                "type": "boolean"
                              },
                              "description": {
                                "type": "string"
                              },
                              "process_type": {
                                "type": "string"
                              }
                            }
                          },
                          "process_type": {
                            "type": "string",
                            "description": ""
                          },
                          "ip_address": {
                            "type": "string",
                            "description": ""
                          },
                          "is_test": {
                            "type": "string",
                            "description": ""
                          },
                          "status": {
                            "type": "string",
                            "description": ""
                          },
                          "expires_at": {
                            "type": "string",
                            "description": ""
                          },
                          "createdAt": {
                            "type": "string",
                            "description": ""
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": ""
                          },
                          "email_id": {
                            "type": "string",
                            "description": ""
                          },
                          "form_id": {
                            "type": "string",
                            "description": ""
                          },
                          "merchant_id": {
                            "type": "string",
                            "description": ""
                          },
                          "app_id": {
                            "type": "string",
                            "description": ""
                          },
                          "mid_id": {
                            "type": "string",
                            "description": ""
                          },
                          "customer_id": {
                            "type": "string",
                            "description": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment/receipts": {
      "get": {
        "operationId": "payment-receipts-fetch",
        "summary": "Fetch Receipts (linq templates)",
        "tags": [
          "Payment Form (linq)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Receipt ID (to be used in the **Clone Payment Forms** endpoint)"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name/Alias of this receipt"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Receipt Data Loaded",
                      "data": [
                        { 
                          "id": "form_drakxkkljl4tfsp06w3jzf",
                          "name": "Receipt Test 1"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/new_merchant": {
      "post": {
        "operationId": "channels-merchant-add",
        "summary": "New Merchant - (Sign Up / Enrollment)",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Add / Enroll a new Merchant to your portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "descriptor",
                      "annualCCSales",
                      "avgTicket",
                      "environment",
                      "mcc",
                      "merchant",
                      "owners"
                    ],
                    "properties": {
                      "descriptor": {
                        "type": "string",
                        "description": "The name under which the merchant is doing business."
                      },
                      "annualCCSales": {
                        "type": "integer",
                        "description": "The value of annual credit card sales for this merchant.\n\nThe value is an integer in cents so '25.30' will be '2530'"
                      },
                      "avgTicket": {
                        "type": "integer",
                        "description": "The value of average credit card sales for this merchant.\n\nThe value is an integer in cents so '25.30' will be '2530'"
                      },
                      "environment": {
                        "type": "string",
                        "description": "The environment the merchant is in.\n\nPossible request values are `retail`, `moto`, `supermarket`, `cardPresent`, `restaurant`, `serviceStation`, `fuel` and `ecommerce`"
                      },
                      "mcc": {
                        "type": "string",
                        "default": "",
                        "description": "The Merchant Category Code of this merchant.\n\nContact dev ops for proper codes"
                      },
                      "merchant": {
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "address1",
                          "city",
                          "state",
                          "zip",
                          "country",
                          "timezone",
                          "phone",
                          "email",
                          "ein",
                          "website",
                          "locations",
                          "public",
                          "bank_accounts"
                        ],
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "The business formation type .\n\nPossible request values are `0`(Sole Proprietor), `1`(Corporation), `2`(Limited Liability Company), `3`(Partnership), `5`(Non-Profit Organization) and `6`(Government Organization)"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of this merchant."
                          },
                          "address1": {
                            "type": "string",
                            "description": "The first line of the address associated with this merchant."
                          },
                          "address2": {
                            "type": "string",
                            "description": "The second line of the address associated with this merchant."
                          },
                          "city": {
                            "type": "string",
                            "description": "The city associated with this merchant."
                          },
                          "state": {
                            "type": "string",
                            "description": "The state associated with this merchant.\n\nMust be the state's two letter abbreviation"
                          },
                          "zip": {
                            "type": "integer",
                            "description": "The zip code associated with this merchant."
                          },
                          "country": {
                            "type": "string",
                            "description": "The country associated with this merchant.\n\nCurrently only accepts `USA`"
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The timezone associated with this merchant.\n\nPossible request values are `est`, `cst`, `pst`, `mst`, `akst`, `hst`, `sst`, `chst` and `ast`"
                          },
                          "phone": {
                            "description": "The phone number associated with this merchant.",
                            "type": "integer"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email associated with this merchant."
                          },
                          "ein": {
                            "type": "integer",
                            "description": "The IRS Employer Identication Number associated with this merchant. If the business is a Sole Proprietor this should match the SSN of the primary owner."
                          },
                          "website": {
                            "type": "string",
                            "description": "The website url associated with this merchant."
                          },
                          "locations": {
                            "type": "integer",
                            "description": "The number of locations this merchant has."
                          },
                          "public": {
                            "type": "integer",
                            "description": "Indicates whether or not this merchant is publicly held."
                          },
                          "bank_accounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "object",
                                  "required": [
                                    "method",
                                    "number",
                                    "routing"
                                  ],
                                  "properties": {
                                    "method": {
                                      "type": "integer",
                                      "description": "this account's type.\n\nPossible request values are `8`(Checking), `9`(Savings), `10`(Corporate Checking) and `11`(Corporate Savings)"
                                    },
                                    "number": {
                                      "type": "string",
                                      "description": "The bank number of this account."
                                    },
                                    "routing": {
                                      "type": "string",
                                      "description": "The routing number of this account."
                                    }
                                  }
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency type this merchant is using.\n\nOnly accepts `USD`"
                                },
                                "primary": {
                                  "type": "integer",
                                  "description": "Indicates whether or not this account is the primary account of this merchant.\n\nPossible request values are `0` and `1`"
                                }
                              },
                              "required": [
                                "account",
                                "currency",
                                "primary"
                              ]
                            }
                          }
                        }
                      },
                      "owners": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "The title for this owner."
                            },
                            "first": {
                              "type": "string",
                              "description": "The first name of this owner."
                            },
                            "last": {
                              "type": "string",
                              "description": "The last name of this owner."
                            },
                            "dob": {
                              "description": "The date of birth of this owner.\n\nThe field is in the form `YYYYMMDD`",
                              "type": "integer"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email associated with this owner."
                            },
                            "ownership": {
                              "type": "integer",
                              "description": "The percent ownership that this owner has.\n\nThe field is represented as basis points, so 80% would be 8000"
                            },
                            "timezone": {
                              "type": "string",
                              "description": "The timezone associated with this owner.\n\nPossible request values are `est`, `cst`, `pst`, `mst`, `akst`, `hst`, `sst`, `chst` and `ast`"
                            },
                            "address1": {
                              "type": "string",
                              "description": "The first line of the address associated with this owner."
                            },
                            "address2": {
                              "type": "string",
                              "description": "The second line address associated with this owner."
                            },
                            "city": {
                              "type": "string",
                              "description": "The city associated with this owner."
                            },
                            "state": {
                              "type": "string",
                              "description": "The state associated with this owner.\n\nMust be the state's two letter abbreviation"
                            },
                            "zip": {
                              "type": "integer",
                              "description": "The zip code associated with this owner."
                            },
                            "country": {
                              "type": "string",
                              "description": "The country associated with this owner.\n\nCurrently only accepts `USA`"
                            },
                            "phone": {
                              "type": "integer",
                              "description": "The phone number associated with this owner."
                            },
                            "ssn": {
                              "type": "integer",
                              "description": "The social security number of this owner."
                            },
                            "primary": {
                              "type": "integer",
                              "description": "Indicates whether or not this is the primary owner."
                            }
                          },
                          "required": [
                            "title",
                            "first",
                            "last",
                            "dob",
                            "email",
                            "ownership",
                            "timezone",
                            "address1",
                            "city",
                            "state",
                            "zip",
                            "country",
                            "phone",
                            "ssn",
                            "primary"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "example": {
                  "data": {
                    "descriptor": "Smith Processing",
                    "annualCCSales": 1000000,
                    "avgTicket": 10000,
                    "environment": "retail",
                    "mcc": "8111",
                    "merchant": {
                      "type": 0,
                      "name": "Smith Company LLC",
                      "address1": "123 North 12 St",
                      "address2": "Suite 403",
                      "city": "Miami",
                      "state": "FL",
                      "zip": 33024,
                      "country": "USA",
                      "timezone": "est",
                      "phone": 1234567891,
                      "email": "support@example.com",
                      "ein": 123456789,
                      "website": "http://www.example.comt",
                      "locations": 1,
                      "public": 1,
                      "bank_accounts": [
                        {
                          "account": {
                            "method": 8,
                            "number": "023456789012345",
                            "routing": "063013924"
                          },
                          "currency": "USD",
                          "primary": 1
                        }
                      ]
                    },
                    "owners": [
                      {
                        "title": "CEO",
                        "first": "James",
                        "last": "Smith",
                        "dob": 19590122,
                        "email": "james.smith@example.com",
                        "ownership": 8000,
                        "timezone": "est",
                        "address1": "123 Example St.",
                        "address2": "Suite 403",
                        "city": "Miami",
                        "state": "FL",
                        "zip": 33024,
                        "country": "USA",
                        "phone": 1234567891,
                        "ssn": 123456789,
                        "primary": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the newly boarded merchant."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "id": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/merchant_status/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Provide the id from the merchant boarding endpoint\n\nexample: `mer_0011cfd0266611e9924d0afd24307899`",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "channels-merchant-status",
        "summary": "Fetch Merchant Status",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Fetch the Merchant Status and return the Merchant Credentials / Merchant ID (MID) if it has been boarded",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the request.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "company_name": {
                          "type": "string",
                          "description": "The company name on the account"
                        },
                        "account_type": {
                          "type": "string",
                          "description": "The account type / environment"
                        },
                        "integration_type": {
                          "type": "string",
                          "description": "The application that has integrated to <span style=\"color:#5375bd\"><b><<company_name>></b></span> payment platform"
                        },
                        "mer_id": {
                          "type": "string",
                          "description": "The unique <span style=\"color:#5375bd\"><b><<company_name>></b></span> id"
                        },
                        "app_key": {
                          "type": "string",
                          "description": "The Qor-App-Key credentials"
                        },
                        "client_key": {
                          "type": "string",
                          "description": "The Qor-Client-Key credentials"
                        },
                        "mid": {
                          "type": "string",
                          "description": "The assigned Merchant ID (MID) for the account"
                        },
                        "monthly_charge_limit": {
                          "type": "string",
                          "description": "The monthly volume limit that the merchant is allowed to charge"
                        },
                        "max_transaction_amount": {
                          "type": "string",
                          "description": "The maximum amount that a merchant is allowed to charge per transaction"
                        },
                        "status": {
                          "type": "string",
                          "description": "The current account status.\n\nPossible response values are `active`, `pending`, `terminated`, `refund pending`, `refund only`, and `data view only`"
                        },
                        "boarded": {
                          "type": "integer",
                          "description": "Has the account been boarded.\n\nPossible response values are 0 = `no` and 1 = `yes`"
                        },
                        "is_payfac": {
                          "type": "integer",
                          "description": "Whether are not this account has been boarded under the PayFac status"
                        },
                        "created": {
                          "type": "string",
                          "description": "The creation date of the account"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "data": {
                        "company_name": "",
                        "account_type": "",
                        "integration_type": "",
                        "mer_id": "",
                        "app_key": "",
                        "client_key": "",
                        "mid": "",
                        "status": "",
                        "boarded": "",
                        "is_payfac": "",
                        "created": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/my_kpis": {
      "get": {
        "operationId": "channels-my-kpis",
        "summary": "Fetch My KPIs",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Fetch your portfolio KPIs",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/channels/my_merchants": {
      "get": {
        "operationId": "channels-my-merchants",
        "summary": "Fetch My Merchants",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Fetch your portfolio of merchants",
        "parameters": [
          {
            "name": "mer_id",
            "in": "query",
            "description": "The merchant ID of the specific account being searched for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_type",
            "in": "query",
            "description": "The account type of the merchant(s) that are being searched for.\n\nPossible request value are `ecomm`, `retail` and `moto`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company",
            "in": "query",
            "description": "The name of the merchant(s) that are being searched for.\n\nNote: The company field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "The first line of the address of the merchant(s) that are being searched for.\n\nNote: The address field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address2",
            "in": "query",
            "description": "The second line of the address of the merchant(s) that are being searched for.\n\nNote: The address2 field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "The city of the merchant(s) that are being searched for.\n\nNote: The city field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "The state of the merchant(s) that are being searched for.\n\nNote: The state field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "The zip code of the merchant(s) that are being searched for.\n\nNote: The zip code field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webaddress",
            "in": "query",
            "description": "The web address of the merchent(s) that are being searched for.\n\nNote: The web address field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstname",
            "in": "query",
            "description": "The first name of the contact of the merchant(s) that are being searched for.\n\nNote: The firstname field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "The last name of the contact of the merchant(s) that are being searched for.\n\nNote: The lastname field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "The phone number of the merchant(s) that are being searched for.\n\nNote: The phone field does not have to be completed to perform a search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_login",
            "in": "query",
            "description": "The api login of the merchant that is being searched for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the merchant(s) that are being searched for.\n\nPossible request values are `1` = Active, `2` = Pending, `3` = Suspended, `4` = Terminated, `5` = Refund Pending and `6` = Terminated (Refunds)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of marchants that will be shown in a single response.\n\nThe highest amount allowed for the limit is `250`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset of the given response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of merchants associated with this specific referrer."
                        },
                        "inactive": {
                          "type": "integer",
                          "description": "The total number of inactive merchants associated with this specific referrer."
                        },
                        "merchants": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of this specifc merchant."
                              },
                              "created": {
                                "type": "string",
                                "description": "The date that this merchant was created."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of this specific merchant."
                              },
                              "address1": {
                                "type": "string",
                                "description": "The first line of the address associated with this specific merchant."
                              },
                              "address2": {
                                "type": "string",
                                "description": "The second line of the address associated with this specific merchant."
                              },
                              "city": {
                                "type": "string",
                                "description": "The city associated with this specific merchant."
                              },
                              "state": {
                                "type": "string",
                                "description": "The state associated with this specific merchant."
                              },
                              "zip": {
                                "type": "string",
                                "description": "The zip code associated with this specific merchant."
                              },
                              "country": {
                                "type": "string",
                                "description": "The country associated with this specific merchant."
                              },
                              "phone": {
                                "type": "string",
                                "description": "The contact phone number associated with this specific merchant."
                              },
                              "email": {
                                "type": "string"
                              },
                              "website": {
                                "type": "string",
                                "description": "The website url associated with this specific merchant."
                              },
                              "last_activity": {
                                "type": "string",
                                "description": "The date of this merchant's last activity."
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of this specific merchant."
                              },
                              "is_inactive": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule is inactive.\n\nPossible response values are `0` and `1`"
                              },
                              "total_disbursements": {
                                "type": "integer",
                                "description": "The total number of deposits this specific merchant has had."
                              },
                              "first_disbursement": {
                                "description": "The date of the first disbursement of this specific merchant.",
                                "nullable": true,
                                "type": "string"
                              },
                              "funds": {
                                "type": "object",
                                "properties": {
                                  "available": {
                                    "description": "The amount that is marked as available funds.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "total": {
                                    "description": "The amount of total funds a merchant has.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "reserved": {
                                    "description": "The amount held as reserved funds",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pending": {
                                    "description": "The amount that is marked as pending funds.",
                                    "nullable": true,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "total": 0,
                        "inactive": 0,
                        "merchants": [
                          {
                            "id": "",
                            "created": "",
                            "name": "",
                            "address1": "",
                            "address2": "",
                            "city": "",
                            "state": "",
                            "zip": "",
                            "country": "",
                            "phone": "",
                            "email": "",
                            "website": "",
                            "last_activity": "",
                            "status": "",
                            "is_inactive": 0,
                            "total_disbursements": 0,
                            "first_disbursement": "",
                            "funds": {
                              "available": "",
                              "total": "",
                              "reserved": "",
                              "pending": ""
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/my_deposits": {
      "get": {
        "operationId": "channels-my-deposits",
        "summary": "Fetch My Deposits / Payouts",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Fetch your deposits/payouts",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "date_requested": {
                          "type": "string",
                          "description": "The date that the deposit was created."
                        },
                        "date_processed": {
                          "type": "string",
                          "description": "The date that the deposit was processed."
                        },
                        "account": {
                          "type": "string",
                          "description": "The last four digits of the account number associated with this deposit."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of this specific deposit."
                        },
                        "amount_requested": {
                          "type": "string",
                          "description": "The original amount requested for this specific deposit."
                        },
                        "amount_approved": {
                          "type": "string",
                          "description": "The amount approved for this specific deposit."
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "date_requested": "",
                        "date_processed": "",
                        "account": "",
                        "id": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ],
                        "detail": {
                          "Amount": "",
                          "Sales": "",
                          "Refunds": "",
                          "Chargebacks/Disputes": "",
                          "Fees": "",
                          "Withdrawal Failure(s)": "",
                          "Sent to Reserve": "",
                          "Rollover from last Deposit": "",
                          "Cancelled Refunds": "",
                          "Not part of Deposit": "",
                          "Daily": "",
                          "Monthly": "",
                          "Authorizations": "",
                          "Captures": "",
                          "Retrievals": "",
                          "Settlement": "",
                          "Interchange": "",
                          "Entry Refund(s)": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
 "/channels/clone/payment_form": {
      "post": {
        "operationId": "channels-clone-form",
        "summary": "Clone a payment form and/or receipt",
        "tags": [
          "Channels > ISV / Referrer"
        ],
        "description": "Clone a payment form and/or receipt",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "form": {
                    "type": "object",
                    "properties": {
                      "client_key_from": {
                        "type": "string",
                        "description": "Client key to copy forms and receipts from"
                      },
                      "client_key_to": {
                        "type": "string",
                        "description": "Assigned client key to clone forms and receipts to"
                      },
                      "merchant_id_to": {
                        "type": "string",
                        "description": "Assigned merchant id (MID) for the client_key_to."
                      },
                      "payment_form_name": {
                        "type": "string",
                        "description": "Name for the cloned form.\nIf left blank or omitted the new form is set to the original"
                      },
                      "receipt_name": {
                        "type": "string",
                        "description": "Name for the cloned receipt.\nIf left blank or omitted the new receipt is set to the original"
                      },
                      "receipt_img": {
                        "type": "string",
                        "description": "URL of an image that will be used"
                      },
                      "merchant_logo": {
                        "type": "string",
                        "description": "URL of an image that will be used"
                      },
                      "receipt_id": {
                        "type": "string",
                        "description": "The receipt id that you want cloned.\nInclude with a payment_form_id to copy and attach to that payment form"
                      },
                      "payment_form_id": {
                        "type": "string",
                        "description": "the form id that you want cloned.\n<b>Not required</b> when only cloning a receipt"
                      },
                      "subject": {
                        "type": "string",
                        "description": "The Subject line on the email"
                      },
                      "from_name": {
                        "type": "string",
                        "description": "The From for emails"
                      },
                      "replyto": {
                        "type": "string",
                        "description": "The Reply-To for emails"
                      },
                      "replyto_name": {
                        "type": "string",
                        "description": "The Reply-to name for emails"
                      },
                      "payment_form_message": {
                        "type": "string",
                        "description": "The message that you would like to have on a payment form"
                      },
                      "receipt_title": {
                        "type": "string",
                        "description": "The title you would like on a receipt"
                      },
                      "receipt_footer": {
                        "type": "string",
                        "description": "The footer you would like on a receipt"
                      },
                      "receipt_greeting": {
                        "type": "string",
                        "description": "The greeting you would like on a receipt"
                      }
                    },
                    "required": [
                      "client_key_from",
                      "client_key_to",
                      "merchant_id_to",
                      "receipt_id",
                      "payment_form_id"
                    ]
                  }
                },
                "example": {
                    "client_key": "",
                    "name": "",
                    "autorefunds": "",
                    "receipt_img": "",
                    "merchant_logo": "",
                    "receipt_id": "",
                    "payment_form_id": "",
                    "subject": "",
                    "from_name": "",
                    "replyto": "",
                    "replyto_name": "",
                    "payment_form_message": "",
                    "receipt_title": "",
                    "receipt_footer": "",
                    "receipt_greeting": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "for_account_name": {
                      "type": "string",
                      "description": "The name of the merchant that the new form and/or receipts were created."
                    },                    
                    "form_id": {
                      "type": "string",
                      "description": "The new form id if available."
                    },
                    "receipt_id": {
                      "type": "string",
                      "description": "The new receipt id if available."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "form_id": "",
                        "receipt_id": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/new_marketplace_merchant": {
      "post": {
        "operationId": "channels-marketplace-add",
        "summary": "New MarketPlace Merchant - (Sign Up / Enrollment)",
        "tags": [
          "Channels > MarketPlace"
        ],
        "description": "Add / Enroll a new MarketPlace Merchant to your portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "descriptor",
                      "merchant",
                      "owners"
                    ],
                    "properties": {
                      "descriptor": {
                        "type": "string",
                        "description": "The name under which the merchant is doing business."
                      },
                      "annualCCSales": {
                        "type": "integer",
                        "description": "The value of annual credit card sales for this merchant.\n\nThe value is an integer in cents so '25.30' will be '2530'"
                      },
                      "avgTicket": {
                        "type": "integer",
                        "description": "The value of average credit card sales for this merchant.\n\nThe value is an integer in cents so '25.30' will be '2530'"
                      },
                      "mcc": {
                        "type": "string",
                        "default": "",
                        "description": "The Merchant Category Code of this merchant.\n\nContact dev ops for proper codes"
                      },
                      "merchant": {
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "address1",
                          "city",
                          "state",
                          "zip",
                          "country",
                          "timezone",
                          "phone",
                          "email",
                          "ein",
                          "website",
                          "bank_accounts"
                        ],
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "The type of merchant that this merchant is.\n\nPossible request values are `0`(Sole Proprietor), `1`(Corporation), `2`(Limited Liability Company), `3`(Partnership), `5`(Non-Profit Organization) and `6`(Government Organization)"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of this merchant."
                          },
                          "address1": {
                            "type": "string",
                            "description": "The first line of the address associated with this merchant."
                          },
                          "address2": {
                            "type": "string",
                            "description": "The second line of the address associated with this merchant."
                          },
                          "city": {
                            "type": "string",
                            "description": "The city associated with this merchant."
                          },
                          "state": {
                            "type": "string",
                            "description": "The state associated with this merchant.\n\nMust be the state's two letter abbreviation"
                          },
                          "zip": {
                            "type": "integer",
                            "description": "The zip code associated with this merchant."
                          },
                          "country": {
                            "type": "string",
                            "description": "The country associated with this merchant.\n\nCurrently only accepts `USA`"
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The timezone associated with this merchant.\n\nPossible request values are `est`, `cst`, `pst`, `mst`, `akst`, `hst`, `sst`, `chst` and `ast`"
                          },
                          "phone": {
                            "description": "The phone number associated with this merchant.",
                            "type": "integer"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email associated with this merchant."
                          },
                          "ein": {
                            "type": "integer",
                            "description": "The IRS Employer Identication Number associated with this merchant. If the business is a Sole Proprietor this should match the SSN of the primary owner."
                          },
                          "website": {
                            "type": "string",
                            "description": "the website of the marketplace seller."
                          },
                          "tcDate": {
                            "type": "string",
                            "description": "the date/time that the terms and conditions where signed by seller/merchant."
                          },
                          "bank_accounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "object",
                                  "required": [
                                    "method",
                                    "number",
                                    "routing"
                                  ],
                                  "properties": {
                                    "method": {
                                      "type": "integer",
                                      "description": "this account's type.\n\nPossible request values are `8`(Checking), `9`(Savings), `10`(Corporate Checking) and `11`(Corporate Savings)"
                                    },
                                    "number": {
                                      "type": "string",
                                      "description": "The bank number of this account."
                                    },
                                    "routing": {
                                      "type": "string",
                                      "description": "The routing number of this account."
                                    }
                                  }
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The currency type this merchant is using.\n\nOnly accepts `USD`"
                                },
                                "primary": {
                                  "type": "integer",
                                  "description": "Indicates whether or not this account is the primary account of this merchant.\n\nPossible request values are `0` and `1`"
                                }
                              },
                              "required": [
                                "account",
                                "currency",
                                "primary"
                              ]
                            }
                          }
                        }
                      },
                      "owners": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "The title for this owner."
                            },
                            "first": {
                              "type": "string",
                              "description": "The first name of this owner."
                            },
                            "last": {
                              "type": "string",
                              "description": "The last name of this owner."
                            },
                            "dob": {
                              "description": "The date of birth of this owner.\n\nThe field is in the form `YYYYMMDD`",
                              "type": "integer"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email associated with this owner."
                            },
                            "ownership": {
                              "type": "integer",
                              "description": "The percent ownership that this owner has.\n\nThe field is represented as basis points, so 80% would be 8000"
                            },
                            "timezone": {
                              "type": "string",
                              "description": "The timezone associated with this owner.\n\nPossible request values are `est`, `cst`, `pst`, `mst`, `akst`, `hst`, `sst`, `chst` and `ast`"
                            },
                            "address1": {
                              "type": "string",
                              "description": "The first line of the address associated with this owner."
                            },
                            "address2": {
                              "type": "string",
                              "description": "The second line address associated with this owner."
                            },
                            "city": {
                              "type": "string",
                              "description": "The city associated with this owner."
                            },
                            "state": {
                              "type": "string",
                              "description": "The state associated with this owner.\n\nMust be the state's two letter abbreviation"
                            },
                            "zip": {
                              "type": "integer",
                              "description": "The zip code associated with this owner."
                            },
                            "country": {
                              "type": "string",
                              "description": "The country associated with this owner.\n\nCurrently only accepts `USA`"
                            },
                            "phone": {
                              "type": "integer",
                              "description": "The phone number associated with this owner."
                            },
                            "ssn": {
                              "type": "integer",
                              "description": "The social security number of this owner."
                            },
                            "dl_state": {
                              "type": "string",
                              "description": "the drivers license issued state (2 letter abbreviation)."
                            },
                            "dl_num": {
                              "type": "string",
                              "description": "the drivers license number of the owner (no hyphens)."
                            },
                            "primary": {
                              "type": "integer",
                              "description": "Indicates whether or not this is the primary owner."
                            }
                          },
                          "required": [
                            "title",
                            "first",
                            "last",
                            "dob",
                            "email",
                            "ownership",
                            "timezone",
                            "address1",
                            "city",
                            "state",
                            "zip",
                            "country",
                            "phone",
                            "ssn",
                            "primary"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "example": {
                  "data": {
                    "descriptor": "Smith Processing",
                    "annualCCSales": 1000000,
                    "avgTicket": 10000,
                    "environment": "retail",
                    "mcc": "8111",
                    "merchant": {
                      "type": 0,
                      "name": "Smith Company LLC",
                      "address1": "123 North 12 St",
                      "address2": "Suite 403",
                      "city": "Miami",
                      "state": "FL",
                      "zip": 33024,
                      "country": "USA",
                      "timezone": "est",
                      "phone": 1234567891,
                      "email": "support@example.com",
                      "ein": 123456789,
                      "website": "http://www.example.comt",
                      "locations": 1,
                      "public": 1,
                      "bank_accounts": [
                        {
                          "account": {
                            "method": 8,
                            "number": "023456789012345",
                            "routing": "063013924"
                          },
                          "currency": "USD",
                          "primary": 1
                        }
                      ]
                    },
                    "owners": [
                      {
                        "title": "CEO",
                        "first": "James",
                        "last": "Smith",
                        "dob": 19590122,
                        "email": "james.smith@example.com",
                        "ownership": 8000,
                        "timezone": "est",
                        "address1": "123 Example St.",
                        "address2": "Suite 403",
                        "city": "Miami",
                        "state": "FL",
                        "zip": 33024,
                        "country": "USA",
                        "phone": 1234567891,
                        "ssn": 123456789,
                        "primary": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the newly boarded merchant."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "id": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/get_referrer": {
      "get": {
        "operationId": "channels-referrers",
        "summary": "Fetch Referrer",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch the Merchant ISV / Referrer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of this specific referrer."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of this specific referrer."
                        },
                        "first_name": {
                          "type": "string",
                          "default": "",
                          "description": "The first name of the contact of this specific referrer."
                        },
                        "last_name": {
                          "type": "string",
                          "description": "The last name of the contact of this specific referrer."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email of the contact of this specific referrer."
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone number of the contact of this specific referrer."
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "referrer_id": "",
                        "name": "",
                        "first_name": "",
                        "last_name": "",
                        "email": "",
                        "phone": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/kpis": {
      "get": {
        "operationId": "channels-kpis",
        "summary": "Fetch KPIs",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a Merchant's KPIs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/channels/bank_accounts": {
      "get": {
        "operationId": "channels-bank-accounts",
        "summary": "Fetch Bank Account(s)",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a Merchant's bank account(s) information",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "The total number of bank accounts present in this response."
                        },
                        "bank_accounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "created": {
                                "type": "string",
                                "description": "The date that this specific bank account was created."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of this specific bank account."
                              },
                              "number": {
                                "type": "string",
                                "description": "The last four digits of the card number associated with this specific bank account."
                              },
                              "routing": {
                                "type": "string",
                                "description": "The last four digits of the routing number associated with this specific bank accounts"
                              },
                              "method": {
                                "type": "string",
                                "description": "The type of this specific bank account."
                              },
                              "is_primary": {
                                "type": "integer",
                                "description": "Indicator of whether or not this is the primary bank account.\n\nPossible response values are `0` and `1`"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of this specific bank account."
                              },
                              "is_inactive": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule is inactive.\n\nPossible response values are `0` and `1`"
                              },
                              "is_frozen": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule is frozen.\n\nPossible response values are `0` and `1`"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of account that this specific bank account is.\n\nPossible response values are `all`, `debit` and `credit`"
                              },
                              "reserved": {
                                "type": "string",
                                "description": "Indicates whether or not the bank account is reserved and what action will take place if so."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "bank_accounts": [
                          {
                            "created": "",
                            "id": "",
                            "number": "",
                            "routing": "",
                            "method": "",
                            "is_primary": 0,
                            "status": "",
                            "is_inactive": 0,
                            "is_frozen": 0,
                            "type": "",
                            "reserved": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/funds": {
      "get": {
        "operationId": "channels-funds",
        "summary": "Fetch Funds",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a Merchant's funding accounts.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reserved": {
                          "type": "string",
                          "description": "The amount held as reserved funds."
                        },
                        "pending": {
                          "type": "string",
                          "description": "The amount that is marked as pending funds."
                        },
                        "available": {
                          "type": "string",
                          "description": "The amount that is marked as available funds."
                        },
                        "total": {
                          "type": "string",
                          "description": "The amount of total funds a merchant has."
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "data": {
                        "reserved": "771399.82",
                        "pending": "0.00",
                        "available": "217038.03",
                        "total": "988437.85"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/fees": {
      "get": {
        "operationId": "channels-fees",
        "summary": "Fetch Fees",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a Merchant's transaction and other fees.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "The total number of fees present in this response."
                        },
                        "fees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of this specific fee."
                              },
                              "amount": {
                                "type": "string",
                                "description": "The amount of this specific fee."
                              },
                              "type": {
                                "type": "integer",
                                "description": "The schedule type of this specific fee."
                              },
                              "calc": {
                                "type": "string",
                                "description": "Indicator on how the fee is calculated.\n\nPossible response values are `actual` and `percent`"
                              },
                              "field": {
                                "type": "string",
                                "description": "Description of what type of fee this specific fee is."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "fees": [
                          {
                            "name": "",
                            "amount": "",
                            "type": 0,
                            "calc": "",
                            "field": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/settlement": {
      "get": {
        "operationId": "channels-withdrawals",
        "summary": "Fetch Settlement Schedule(s)",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a Merchant's settlement schedule(s).",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "The total number of withdrawals present in this response."
                        },
                        "withdrawals": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "created": {
                                "type": "string",
                                "description": "The date that this withdrawal was created."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of this specifc withdrawal."
                              },
                              "schedule": {
                                "type": "string",
                                "description": "The schedule at which how frequently the withdrawal is executed."
                              },
                              "schedule_factor": {
                                "type": "integer",
                                "description": "The factor that the schedule is mulitplied by."
                              },
                              "start_date": {
                                "type": "integer",
                                "description": "The date that the withdrawal schedule will start."
                              },
                              "unit_of_measure": {
                                "type": "integer",
                                "description": "The percent of how much will be withdrawn when a withdrawal is executed."
                              },
                              "amount": {
                                "type": "string",
                                "description": "The total amount of this withdrawal."
                              },
                              "minimum": {
                                "type": "string",
                                "description": "The minimum amount that must be met before a withdrawal is performed."
                              },
                              "maximum": {
                                "type": "string",
                                "description": "The maximum amount that this withdrawal will be."
                              },
                              "float": {
                                "type": "integer",
                                "description": "The minimum amount that an account wants to maintain."
                              },
                              "skip_off_days": {
                                "type": "integer",
                                "description": "Option that skips withdrawals on holidays and weekends."
                              },
                              "is_inactive": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule is inactive."
                              },
                              "is_frozen": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule is frozen."
                              },
                              "is_same_day": {
                                "type": "integer",
                                "description": "Indicates whether or not this withdrawal schedule executes on the same day it is created."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "withdrawals": [
                          {
                            "created": "",
                            "id": "",
                            "schedule": "",
                            "schedule_factor": 0,
                            "start_date": 0,
                            "unit_of_measure": 1,
                            "amount": "",
                            "minimum": "",
                            "maximum": "",
                            "float": 0,
                            "skip_off_days": 0,
                            "is_inactive": 0,
                            "is_frozen": 0,
                            "is_same_day": 0
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/add_settlement": {
      "post": {
        "operationId": "channels-settlement-add",
        "summary": "Add Settlement Schedule",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Add a Merchant Settlement Schedule.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/update_settlement": {
      "patch": {
        "operationId": "channels-settlement-update",
        "summary": "Update Settlement Schedule(s)",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Update / set a payout on a Merchant's Settlement Schedule(s).",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "array",
                      "description": "This object is only present when errors have prevented any schedules to update.",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/notifications/{mer_id}": {
      "parameters": [
        {
          "name": "mer_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "channels-notifications-fetch",
        "summary": "Fetch Notification settings",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch merchant notification settings.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refunds_enabled": {
                          "type": "integer"
                        },
                        "refunds_sendto": {
                          "type": "string"
                        },
                        "autorefunds_enabled": {
                          "type": "integer"
                        },
                        "autorefunds_sendto": {
                          "type": "string"
                        },
                        "disputes_daily_enabled": {
                          "type": "integer"
                        },
                        "dispute_reminders_enabled": {
                          "type": "integer"
                        },
                        "disputes_sendto": {
                          "type": "string"
                        },
                        "trxns_yesterday_enabled": {
                          "type": "integer"
                        },
                        "trxns_mtd_enabled": {
                          "type": "integer"
                        },
                        "trxns_sendto": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully.",
                      "data":{
                        "refunds_enabled": "0",
                        "refunds_sendto": "sendto@email.com",
                        "autorefunds_enabled": "0",
                        "autorefunds_sendto": "sendto@email.com",
                        "disputes_daily_enabled": "0",
                        "dispute_reminders_enabled": "0",
                        "disputes_sendto": "sendto@email.com",
                        "trxns_yesterday_enabled": "0",
                        "trxns_mtd_enabled": "0",
                        "trxns_sendto": "sendto@email.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/notifications": {
      "patch": {
        "operationId": "channels-notifications-update",
        "summary": "Update Notifications",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Update / set merchant notifications.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "refunds": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "refunds_sendto": {
                        "type": "string"
                      },
                      "autorefunds": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "autorefunds_sendto": {
                        "type": "string"
                      },
                      "disputes_daily": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "disputes_reminders": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "disputes_sendto": {
                        "type": "string"
                      },
                      "trxns_yesterday": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "trxns_monthtodate": {
                        "type": "integer",
                        "enum": [
                          "0",
                          "1"
                        ]
                      },
                      "trxns_sendto": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                    "refunds": "",
                    "refunds_sendto": "",
                    "autorefunds": "",
                    "autorefunds_sendto": "",
                    "disputes_daily": "",
                    "disputes_reminders": "",
                    "disputes_sendto": "",
                    "trxns_yesterday": "",
                    "trxns_monthtodate": "",
                    "trxns_sendto": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/deposit/{deposit_id}": {
      "parameters": [
        {
          "name": "deposit_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "channels-deposit",
        "summary": "Fetch a Deposit / Payout",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch a specific deposit / payout.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deposit_id": {
                          "type": "string",
                          "description": "The ID of this specific deposit."
                        },
                        "account": {
                          "type": "string",
                          "description": "The last four digits of the account number associated with this deposit."
                        },
                        "date_requested": {
                          "type": "string",
                          "description": "The date that the deposit was created."
                        },
                        "date_processed": {
                          "type": "string",
                          "description": "The date that the deposit was processed."
                        },
                        "amount_requested": {
                          "type": "string",
                          "description": "The original amount requested for this specific deposit."
                        },
                        "amount_approved": {
                          "type": "string",
                          "description": "The amount approved for this specific deposit."
                        },
                        "orig_trxns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_id": {
                                "type": "string",
                                "description": "The ID for this specific transaction."
                              },
                              "settled_date": {
                                "type": "integer",
                                "description": "The date that this specific transaction was settled."
                              },
                              "order_id": {
                                "type": "string",
                                "description": "The order id of this specific transaction."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "date_requested": "",
                        "date_processed": "",
                        "account": "",
                        "id": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/deposits/{year}/{status}": {
      "parameters": [
        {
          "name": "year",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "status",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "default": "3"
          }
        }
      ],
      "get": {
        "operationId": "channels-deposits",
        "summary": "Fetch Deposits / Payouts",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch all deposits / payouts for a merchant.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of deposits present on one page. The maximum amount is 100. The default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The page number that the response will start at. \nThe default is 0",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "created",
            "in": "query",
            "description": "The date that the request is searching for.\n\nThe request field will be in the form `YYYYMMDD`",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount that the request is searching for.",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deposit_id": {
                          "type": "string",
                          "description": "The ID of this specific deposit."
                        },
                        "account": {
                          "type": "string",
                          "description": "The last four digits of the account number associated with this deposit."
                        },
                        "date_requested": {
                          "type": "string",
                          "description": "The date that the deposit was created."
                        },
                        "date_processed": {
                          "type": "string",
                          "description": "The date that the deposit was processed."
                        },
                        "amount_requested": {
                          "type": "string",
                          "description": "The original amount requested for this specific deposit."
                        },
                        "amount_approved": {
                          "type": "string",
                          "description": "The amount approved for this specific deposit."
                        },
                        "orig_trxns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_id": {
                                "type": "string",
                                "description": "The ID for this specific transaction."
                              },
                              "settled_date": {
                                "type": "integer",
                                "description": "The date that this specific transaction was settled."
                              },
                              "order_id": {
                                "type": "string",
                                "description": "The order id of this specific transaction."
                              }
                            }
                          }
                        },
                        "detail": {
                          "type": "object",
                          "description": "An array of all of the specific details associated with this specific deposit.",
                          "properties": {
                            "Amount": {
                              "type": "string"
                            },
                            "Sales": {
                              "type": "string"
                            },
                            "Refunds": {
                              "type": "string"
                            },
                            "Chargebacks/Disputes": {
                              "type": "string"
                            },
                            "Fees": {
                              "type": "string"
                            },
                            "Withdrawal Failure(s)": {
                              "type": "string"
                            },
                            "Sent to Reserve": {
                              "type": "string"
                            },
                            "Rollover from last Deposit": {
                              "type": "string"
                            },
                            "Cancelled Refunds": {
                              "type": "string"
                            },
                            "Not part of Deposit": {
                              "type": "string"
                            },
                            "Daily": {
                              "type": "string"
                            },
                            "Monthly": {
                              "type": "string"
                            },
                            "Authorizations": {
                              "type": "string"
                            },
                            "Captures": {
                              "type": "string"
                            },
                            "Retrievals": {
                              "type": "string"
                            },
                            "Settlement": {
                              "type": "string"
                            },
                            "Interchange": {
                              "type": "string"
                            },
                            "Entry Refund(s)": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "date_requested": "",
                        "date_processed": "",
                        "account": "",
                        "id": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ],
                        "detail": {
                          "Amount": "",
                          "Sales": "",
                          "Refunds": "",
                          "Chargebacks/Disputes": "",
                          "Fees": "",
                          "Withdrawal Failure(s)": "",
                          "Sent to Reserve": "",
                          "Rollover from last Deposit": "",
                          "Cancelled Refunds": "",
                          "Not part of Deposit": "",
                          "Daily": "",
                          "Monthly": "",
                          "Authorizations": "",
                          "Captures": "",
                          "Retrievals": "",
                          "Settlement": "",
                          "Interchange": "",
                          "Entry Refund(s)": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/deposit_detail/{deposit_id}": {
      "parameters": [
        {
          "name": "deposit_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "channels-deposits-detail",
        "summary": "Fetch Deposit Detail",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Fetch the details of a specific deposit / payout.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deposit_id": {
                          "type": "string",
                          "description": "The ID of this specific deposit."
                        },
                        "account": {
                          "type": "string",
                          "description": "The last four digits of the account number associated with this deposit."
                        },
                        "date_requested": {
                          "type": "string",
                          "description": "The date that the deposit was created."
                        },
                        "date_processed": {
                          "type": "string",
                          "description": "The date that the deposit was processed."
                        },
                        "amount_requested": {
                          "type": "string",
                          "description": "The original amount requested for this specific deposit."
                        },
                        "amount_approved": {
                          "type": "string",
                          "description": "The amount approved for this specific deposit."
                        },
                        "orig_trxns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "trxn_id": {
                                "type": "string",
                                "description": "The ID for this specific transaction."
                              },
                              "settled_date": {
                                "type": "integer",
                                "description": "The date that this specific transaction was settled."
                              },
                              "order_id": {
                                "type": "string",
                                "description": "The order id of this specific transaction."
                              }
                            }
                          }
                        },
                        "detail": {
                          "type": "object",
                          "description": "An array of all of the specific details associated with this specific deposit.",
                          "properties": {
                            "Amount": {
                              "type": "string"
                            },
                            "Sales": {
                              "type": "string"
                            },
                            "Refunds": {
                              "type": "string"
                            },
                            "Chargebacks/Disputes": {
                              "type": "string"
                            },
                            "Fees": {
                              "type": "string"
                            },
                            "Withdrawal Failure(s)": {
                              "type": "string"
                            },
                            "Sent to Reserve": {
                              "type": "string"
                            },
                            "Rollover from last Deposit": {
                              "type": "string"
                            },
                            "Cancelled Refunds": {
                              "type": "string"
                            },
                            "Not part of Deposit": {
                              "type": "string"
                            },
                            "Daily": {
                              "type": "string"
                            },
                            "Monthly": {
                              "type": "string"
                            },
                            "Authorizations": {
                              "type": "string"
                            },
                            "Captures": {
                              "type": "string"
                            },
                            "Retrievals": {
                              "type": "string"
                            },
                            "Settlement": {
                              "type": "string"
                            },
                            "Interchange": {
                              "type": "string"
                            },
                            "Entry Refund(s)": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "date_requested": "",
                        "date_processed": "",
                        "account": "",
                        "id": "",
                        "amount_requested": "",
                        "amount_approved": "",
                        "orig_trxns": [
                          {
                            "trxn_id": "",
                            "settled_date": 0,
                            "order_id": ""
                          }
                        ],
                        "detail": {
                          "Amount": "",
                          "Sales": "",
                          "Refunds": "",
                          "Chargebacks/Disputes": "",
                          "Fees": "",
                          "Withdrawal Failure(s)": "",
                          "Sent to Reserve": "",
                          "Rollover from last Deposit": "",
                          "Cancelled Refunds": "",
                          "Not part of Deposit": "",
                          "Daily": "",
                          "Monthly": "",
                          "Authorizations": "",
                          "Captures": "",
                          "Retrievals": "",
                          "Settlement": "",
                          "Interchange": "",
                          "Entry Refund(s)": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/disputes": {
      "get": {
        "operationId": "channels-disputes",
        "summary": "Fetch Disputes",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "List a Merchant's disputes.",
        "parameters": [
          {
            "name": "show_trxns",
            "in": "query",
            "description": "Indicates whether or not to show the original transactions associated to each dispute.\n\nPossible request values are `0` or `1`",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Indicates which specific status the request will search for.\n\nPossible request values are `open`, `disputed`, `won`  or `lost`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "The total amount of chargebacks present in this response."
                        },
                        "total_disputes": {
                          "type": "number",
                          "description": "The sum amount of all the chargebacks in this response."
                        },
                        "disputes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dispute_id": {
                                "type": "string",
                                "description": "The ID of this specific chrageback."
                              },
                              "created": {
                                "type": "string",
                                "description": "The date that this chargeback was created."
                              },
                              "cycle": {
                                "type": "string",
                                "description": "The currernt state that this chargeback is in."
                              },
                              "ARN": {
                                "type": "string",
                                "description": "The issueing bank's refernce number for this chargeback."
                              },
                              "status": {
                                "type": "string",
                                "description": "The current status of this chargeback."
                              },
                              "reason": {
                                "type": "string",
                                "description": "The reason code for this chargeback."
                              },
                              "reason_description": {
                                "type": "string",
                                "description": "The reason description for this chargeback."
                              },
                              "dispute_amount": {
                                "type": "string",
                                "description": "The amount that this chargeback is disputing."
                              },
                              "trxn_data": {
                                "type": "object",
                                "description": "The data of the original transaction that this chargeback is disputing.",
                                "properties": {
                                  "trxn_id": {
                                    "type": "string",
                                    "description": "The ID of the original transaction."
                                  },
                                  "trxn_date": {
                                    "type": "string",
                                    "description": "The date of the original transaction."
                                  },
                                  "trxn_amount": {
                                    "type": "string",
                                    "description": "The amount of the original transaction."
                                  },
                                  "refunded_amount": {
                                    "type": "string",
                                    "description": "The amount refunded if a refund has been issued."
                                  },
                                  "card_number": {
                                    "type": "string",
                                    "description": "The masked card number used on the original transaction."
                                  },
                                  "avs": {
                                    "type": "string",
                                    "description": "The avs response of this transaction if present, is `null` otherwise."
                                  },
                                  "cvv": {
                                    "type": "string",
                                    "description": "The cvv response of this transaction if present, is `null` otherwise."
                                  },
                                  "cardfullname": {
                                    "type": "string",
                                    "description": "The full name of the card holder that was used on the original transaction."
                                  },
                                  "address1": {
                                    "type": "string",
                                    "description": "The first line of the address associated with the original transaction."
                                  },
                                  "address2": {
                                    "type": "string",
                                    "description": "The second line of the address associated with the original transaction."
                                  },
                                  "city": {
                                    "type": "string",
                                    "description": "The city associated with the original transaction."
                                  },
                                  "state": {
                                    "type": "string",
                                    "default": "",
                                    "description": "The state associated with the original transaction."
                                  },
                                  "zip": {
                                    "type": "string",
                                    "default": "",
                                    "description": "The zip code associated with the original transaction."
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The email associated with the original transaction."
                                  },
                                  "phone": {
                                    "type": "string",
                                    "description": "The phone number associated with the original transaction."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "",
                      "code": "",
                      "message": "",
                      "data": {
                        "count": 0,
                        "total_disputes": 0,
                        "disputes": [
                          {
                            "dispute_id": "",
                            "created": "",
                            "cycle": "",
                            "ARN": "",
                            "status": "",
                            "reason": "",
                            "reason_description": "",
                            "dispute_amount": "",
                            "trxn_data": {
                              "trxn_id": "",
                              "trxn_date": "",
                              "trxn_amount": "",
                              "refunded_amount": "",
                              "card_number": "",
                              "avs": "",
                              "cvv": "",
                              "cardfullname": "",
                              "address1": "",
                              "address2": "",
                              "city": "",
                              "state": "",
                              "zip": "",
                              "email": "",
                              "phone": ""
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/receipt": {
      "post": {
        "operationId": "channels-receipt",
        "summary": "Email a duplicate receipt",
        "tags": [
          "Channels > Merchant Management"
        ],
        "description": "Email a duplicate receipt (sale / refund) to a customer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderChannelsAuthentication_Qor-Client-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receipt": {
                    "type": "object",
                    "properties": {
                      "sendto_name": {
                        "type": "string",
                        "description": "the name of the email recipient"
                      },
                      "sendto_email": {
                        "type": "string",
                        "description": "the email address of the recipient"
                      },
                      "receipt_template_id": {
                        "type": "string",
                        "description": "the receipt template id that the merchant uses for their checkout & receipts (Styler).\n If omiitted the system will use the merchants default receipt template id to style the receipt."
                      },
                        "transaction_type": {
                        "type": "string",
                        "description": "The transaction type of the approved `sale` or `refund`.\nPossible values are `sale` or `refund`.\nIf omitted this defaults to `sale`."
                      },
                        "transaction_id": {
                        "type": "string",
                        "description": "The transaction id returned by QorCommerce for the approved `sale` or `refund`."
                      }
                    },
                    "required": [
                        "sendto_name",
                        "sendto_email",
                        "transaction_id"
                    ]
                  }
                },
                "example": {
                    "sendto_name": "",
                    "sendto_email": "",
                    "receipt_template_id": "",
                    "transaction_id": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the transaction.\n\nPossible response values are `ok` and `error`"
                    },
                    "code": {
                      "type": "string",
                      "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail."
                    },
                    "message": {
                      "type": "string",
                      "description": "A payment gateway status code message."
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Request was processed successfully. (sent)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilities/account/{mid}": {
      "parameters": [
        {
          "name": "mid",
          "in": "path",
          "description": "Provide the Merchant ID (MID) of the account along with the appropriate keys",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "utilities-validate-account",
        "summary": "Validate Merchant Account",
        "tags": [
          "Utilities"
        ],
        "description": "Validate a Merchant account using their supplied credentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "Account validation successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilities/luhn/{card_number}": {
      "parameters": [
        {
          "name": "card_number",
          "in": "path",
          "description": "Full credit card account number.\n\nNo spaces, dashes or special characters",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 14,
            "maximum": 17
          }
        }
      ],
      "get": {
        "operationId": "utilities-validate-cc",
        "summary": "Check / Validate a Credit Card",
        "tags": [
          "Utilities"
        ],
        "description": "This endpoint validates a credit card number and returns helpful card information",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "is_valid": {
                          "type": "boolean"
                        },
                        "pretty_number": {
                          "type": "string"
                        },
                        "formatted_type": {
                          "type": "string"
                        },
                        "card_type": {
                          "type": "string"
                        },
                        "card_gaps": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "card_lengths": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "card_code": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "size": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "The request processed successfully",
                      "data": {
                        "is_valid": true,
                        "pretty_number": "5454 5454 5454 5454",
                        "formatted_type": "Mastercard",
                        "card_type": "mastercard",
                        "card_gaps": [
                          4,
                          8,
                          12
                        ],
                        "card_lengths": [
                          16
                        ],
                        "card_code": {
                          "name": "CVC",
                          "size": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilities/bin/{card_number}": {
      "parameters": [
        {
          "name": "card_number",
          "in": "path",
          "description": "Provide at least the first 6 numeric digits of the card",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "utilities-CC-BIN",
        "summary": "Check a Credit Card BIN",
        "tags": [
          "Utilities"
        ],
        "description": "Validate card number and return card BIN details",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "card_type": {
                          "type": "string"
                        },
                        "BIN_type": {
                          "type": "string"
                        },
                        "prepaid": {
                          "type": "boolean"
                        },
                        "BIN_bank": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "country_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "BIN check successful",
                      "data": {
                        "card_type": "mastercard",
                        "BIN_type": "credit",
                        "prepaid": false,
                        "BIN_bank": "BANK HANDLOWY W WARSZAWIE, S.A.",
                        "country": "Poland",
                        "country_code": "PL"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilities/aba/{routing_number}": {
      "parameters": [
        {
          "name": "routing_number",
          "in": "path",
          "description": "Bank 9-digit Routing Number",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 9
          }
        }
      ],
      "get": {
        "operationId": "utilities-validate-aba",
        "summary": "Verify Bank Details by ABA",
        "tags": [
          "Utilities"
        ],
        "description": "Verify a Bank ABA (routing number)",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "route": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "zip4": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "ABA check successful",
                      "data": {
                        "route": "122242597",
                        "name": "FIRST CITIZENS BANK",
                        "address": "DAC 28",
                        "city": "RALEIGH",
                        "state": "NC",
                        "zip": "27603",
                        "zip4": "0000",
                        "phone": "888.323.4732"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilities/zip/{postal_code}": {
      "parameters": [
        {
          "name": "postal_code",
          "in": "path",
          "description": "Provide 5-digit for US postal Codes\n\nProvide a 6 chars for CA postal codes\n\n* no spaces, dashes or special characters\n\n**US EXAMPLE:**  92382\n**CA EXAMPLE:**  K1A0B1",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "utilities-zipcode",
        "summary": "Find a Zip Code",
        "tags": [
          "Utilities"
        ],
        "description": "Validates zip codes and returns location detail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-App-Key"
          },
          {
            "$ref": "#/components/parameters/trait_qorHeaderAuthentication_Qor-Client-Key"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "postal_code": {
                          "type": "string"
                        },
                        "place": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "state_code": {
                          "type": "string"
                        },
                        "subdivision": {
                          "type": "string"
                        },
                        "subdivision_code": {
                          "type": "string"
                        },
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        },
                        "accuracy": {
                          "type": "string"
                        },
                        "ISO_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "status": "ok",
                      "code": "GW00",
                      "message": "ZIP check successful",
                      "data": {
                        "postal_code": "92382",
                        "place": "Running Springs",
                        "state": "California",
                        "state_code": "CA",
                        "subdivision": "San Bernardino",
                        "subdivision_code": "071",
                        "latitude": "34.2102",
                        "longitude": "-117.1109",
                        "accuracy": "4",
                        "ISO_code": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api-sandbox.qorcommerce.io/v3"
    }
  ],
  "components": {
    "parameters": {
      "trait_storeCard_store_card": {
        "name": "store_card",
        "in": "query",
        "description": "Optional Enter `true` or `1` if you want to store the card in our customer vault.\n\n**NOTE** if `store_card` is true, then body request parameter `cardfullname` is required.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "trait_qorDeveloperIdAuthentication_Qor-Developer-Key": {
        "name": "Qor-Developer-ID",
        "in": "header",
        "description": "The unique key identifying the developer making this request.\n\nFor more detail see #endpoint:zjrd34HsXiJi9orxP\n\nNOTE: If testing use `DEV-RuRbuuDwqb37QMG3GAv2` for the `Qor-Developer-ID` header key.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 24,
          "default": "DEV-RuRbuuDwqb37QMG3GAv2"
        }
      },
      "trait_qoRAppIdAuthentication_Qor-App-Key": {
        "name": "Qor-App-Key",
        "in": "header",
        "description": "The unique key identifying the app making this request.\n\nNOTE: If testing use **`T6554252567241061980`** for the **`Qor-App-Key`** header key.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 24,
          "default": "T6554252567241061980"
        }
      },
      "trait_qorHeaderAuthentication_Qor-App-Key": {
        "name": "Qor-App-Key",
        "in": "header",
        "description": "The unique key identifying the app making this request.\n\nNOTE: If testing use **`T6554252567241061980`** for the **`Qor-App-Key`** header key.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 24,
          "default": "T6554252567241061980"
        }
      },
      "trait_qorHeaderAuthentication_Qor-Client-Key": {
        "name": "Qor-Client-Key",
        "in": "header",
        "description": "The Client key represents an authorized **merchant account**  and is assigned by <<company_name>> or your merchant service account provider.\n\n**NOTE:**  If testing use `01dffeb784c64d098c8c691ea589eb82 `  for the `Qor-Client-Key` header key.",
        "required": true,
        "schema": {
          "type": "string",
          "default": "01dffeb784c64d098c8c691ea589eb82"
        }
      },
      "trait_paging_limit": {
        "name": "limit",
        "in": "query",
        "description": "The number of results to return when viewing a page. \n\nFor example, setting limit to 20 means that, at most, 20 results will be returned in the request.",
        "required": false,
        "schema": {
          "type": "string",
          "default": ""
        }
      },
      "trait_paging_offset": {
        "name": "offset",
        "in": "query",
        "description": "The number of results to skip before returning results. \n\nFor example, setting an offset of 20 means that the API will discard the first 20 results.",
        "required": false,
        "schema": {
          "type": "string",
          "default": ""
        }
      },
      "trait_qorClientIdAuthentication_Qor-Client-Key": {
        "name": "Qor-Client-Key",
        "in": "header",
        "description": "The Client key represents an authorized **merchant account**  and is assigned by <<company_name>> or your merchant service account provider.\n\n**NOTE:**  If testing use `01dffeb784c64d098c8c691ea589eb82`  for the `Qor-Client-Key` header key.",
        "required": true,
        "schema": {
          "type": "string",
          "default": "01dffeb784c64d098c8c691ea589eb82"
        }
      },
      "trait_qorHeaderChannelsAuthentication_Qor-Client-Key": {
        "name": "Qor-Client-Key",
        "in": "header",
        "description": "The Client key represents an authorized **merchant account**  and is assigned by <<company_name>> or your merchant service account provider.\n\n**NOTE:**  If testing use `01dffeb784c64d098c8c691ea589eb82 `  for the `Qor-Client-Key` header key.",
        "required": true,
        "schema": {
          "type": "string",
          "default": "01dffeb784c64d098c8c691ea589eb82"
        }
      },
      "trait_qorHeaderIsvChannelsAuthentication_Qor-Client-Key": {
        "name": "Qor-Client-Key",
        "in": "header",
        "description": "The unique key identifying the channel making this request.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 24,
          "default": "C6554252567241061980"
        }
      }
    },
    "requestBodies": {
      "payment-sale-tokenBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "transaction_data": {
                  "mid": "",
                  "amount": "",
                  "creditcard": "",
                  "currency": "",
                  "orderid": "",
                  "ipaddress": "",
                  "invoiceid": "",
                  "cfirstname": "",
                  "clastname": "",
                  "cemail": "",
                  "cphone": ""
                }
              }
            }
          }
        }
      },
      "gift-activateBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "mid": {
                      "type": "string",
                      "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
                    },
                    "amount": {
                      "type": "string",
                      "description": "the total amount to process"
                    },
                    "orderid": {
                      "type": "string"
                    },
                    "orderid": {
                      "type": "string",
                      "description": "unique merchant order number"
                    },
                    "invoiceid": {
                      "type": "string",
                      "description": "merchant invoice number"
                    },
                    "cvv": {
                      "type": "string",
                      "description": "the credit/debit card verification value"
                    },
                    "month": {
                      "type": "string",
                      "description": "the card expiration month - as 2 digits (ex. `02` for Febuary)"
                    },
                    "year": {
                      "type": "string",
                      "description": "the card expiration year - as 2 digits (ex. `24` for 2024)"
                    },
                    "cardfullname": {
                      "type": "string",
                      "description": "the name printed or embossed on the front of the credit/debit card"
                    },
                    "ipaddress": {
                      "type": "string",
                      "description": "the IP address of the client or server sending the request"
                    },
                    "currency": {
                      "type": "string",
                      "description": "the currency to process. Defaults to `USD` if no value provided",
                      "default": "USD"
                    },
                    "bzip": {
                      "type": "string",
                      "description": "the customer's credit/debit card billing zip code"
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    }
                  }
                }
              },
              "example": {
                "transaction_data": {
                  "mid": "90655454",
                  "amount": "1.5",
                  "creditcard": "5544044490909090",
                  "cvv": "123",
                  "month": "4",
                  "year": "19",
                  "cardfullname": "John Smith",
                  "orderid": "1233123",
                  "ipaddress": "0.0.0.0",
                  "currency": "USD",
                  "bzip": "92838"
                }
              }
            }
          }
        }
      },
      "payment-sale-recurring-body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "mid": {
                      "type": "string",
                      "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
                    },
                    "creditcard": {
                      "type": "string",
                      "description": "The card account number or account token.\n\nDo not use spaces or special characters.\nexample: `5544044490909090`\n\nor the account token\nexample: `909055$DQs7OHDo`",
                      "maxLength": 16
                    },
                    "amount": {
                      "type": "string",
                      "description": "the total amount to process"
                    },
                    "service_charge": {
                      "type": "string",
                      "description": "the amount of the total sum of this transaction that is made up of the service_charge"
                    },
                    "cvv": {
                      "type": "string",
                      "description": "the credit/debit card verification value."
                    },
                    "currency": {
                      "type": "string",
                      "description": "the currency to process. Defaults to `USD` if no value provided",
                      "default": "USD"
                    },
                    "orderid": {
                      "type": "string",
                      "description": "unique merchant order number"
                    },
                    "invoiceid": {
                      "type": "string",
                      "description": "merchant invoice number"
                    },
                    "ipaddress": {
                      "type": "string",
                      "description": "the IP address of the client or server sending the request"
                    },
                    "cfirstname": {
                      "type": "string",
                      "description": "the customer's first name"
                    },
                    "clastname": {
                      "type": "string",
                      "description": "the customer's last name"
                    },
                    "cemail": {
                      "type": "string",
                      "description": "the customer's email address"
                    },
                    "cphone": {
                      "type": "string",
                      "description": "the customer's phone number"
                    },
                    "is_recurring": {
                      "type": "boolean",
                      "description": "whether or not this is an existing recurring transaction",
                      "default": true
                    },
                    "first_trxn": {
                      "type": "string",
                      "description": "the transaction id of the first recurring payment in the series"
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    }
                  },
                  "required": [
                    "mid",
                    "creditcard",
                    "amount"
                  ]
                }
              },
              "required": [
                "transaction_data"
              ],
              "example": {
                "transaction_data": {
                  "mid": "",
                  "creditcard": "",
                  "amount": "",
                  "service_charge": "",
                  "cvv": "",
                  "currency": "",
                  "invoiceid": "",
                  "orderid": "",
                  "ipaddress": "",
                  "cfirstname": "",
                  "clastname": "",
                  "cemail": "",
                  "cphone": "",
                  "is_recurring": true,
                  "first_trxn": ""
                }
              }
            }
          }
        }
      },
      "payment-sale-recurring-setup": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "mid": {
                      "type": "string",
                      "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
                    },
                    "amount": {
                      "type": "string",
                      "description": "the total amount to process"
                    },
                    "creditcard": {
                      "type": "string"
                    },
                    "month": {
                      "type": "string",
                      "description": "the card expiration month - as 2 digits (ex. `02` for Febuary)"
                    },
                    "year": {
                      "type": "string",
                      "description": "the card expiration year - as 2 digits (ex. `24` for 2024)"
                    },
                    "cvv": {
                      "type": "string",
                      "description": "the credit/debit card verification value"
                    },
                    "bzip": {
                      "type": "string",
                      "description": "the customer's credit/debit card billing zip code"
                    },
                    "cardfullname": {
                      "type": "string",
                      "description": "the name printed or embossed on the front of the credit/debit card\n`required` if store payment is set to true"
                    },
                    "currency": {
                      "type": "string",
                      "description": "the currency to process. Defaults to `USD` if no value provided",
                      "default": "USD"
                    },
                    "orderid": {
                      "type": "string",
                      "description": "unique merchant order number"
                    },
                    "invoiceid": {
                      "type": "string",
                      "description": "merchant invoice number"
                    },
                    "ipaddress": {
                      "type": "string",
                      "description": "the IP address of the client or server sending the request"
                    },
                    "baddress": {
                      "type": "string",
                      "description": "the customer's billing street address"
                    },
                    "baddress2": {
                      "type": "string",
                      "description": "the customer's billing street address 2"
                    },
                    "bcity": {
                      "type": "string",
                      "description": "the customer's billing city"
                    },
                    "bstate": {
                      "type": "string",
                      "description": "the customer's billing state code - as 2 characters (ex. FL)"
                    },
                    "bcountry": {
                      "type": "string",
                      "description": "the customer's billing country code",
                      "default": "USD"
                    },
                    "cfirstname": {
                      "type": "string",
                      "description": "the customer's first name"
                    },
                    "clastname": {
                      "type": "string",
                      "description": "the customer's last name"
                    },
                    "cemail": {
                      "type": "string",
                      "description": "the customer's email address"
                    },
                    "cphone": {
                      "type": "string",
                      "description": "the customer's phone number"
                    },
                    "store_card": {
                      "type": "boolean",
                      "description": "if set to `true` will store card information in the QorCommerce Vault and return a payment token",
                      "default": false
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    }
                  },
                  "required": [
                    "transaction_data"
                  ]
                }
              },
              "example": {
                "transaction_data": {
                  "mid": "",
                  "amount": "",
                  "creditcard": "",
                  "cvv": "",
                  "month": "",
                  "year": "",
                  "bzip": "",
                  "cardfullname": "",
                  "currency": "",
                  "invoiceid": "",
                  "orderid": "",
                  "ipaddress": "",
                  "baddress": "",
                  "baddress2": "",
                  "bcity": "",
                  "bstate": "",
                  "bcountry": "",
                  "cfirstname": "",
                  "clastname": "",
                  "cemail": "",
                  "cphone": "",
                  "store_card": false
                }
              }
            }
          }
        }
      },
      "payment-sale-recurring-my": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "mid": {
                      "type": "string",
                      "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "The transaction_id of your original approved payment that will be re-processed."
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "cvv": {
                      "type": "string",
                      "description": "The card verification value.  This is typically a 4-digit value found on the front of Amex cards or a 3-digit value found on the back of most other cards."
                    }
                  },
                  "required": [
                    "mid",
                    "transaction_id",
                    "cvv"
                  ]
                }
              },
              "required": [
                "transaction_data"
              ],
              "example": {
                "transaction_data": {
                  "mid": "",
                  "amount": "",
                  "transaction_id": "",
                  "cvv": ""
                }
              }
            }
          }
        }
      },
      "cash-saleBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "default": "cash"
                },
                "mid": {
                  "type": "string",
                  "description": "the merchant id (MID) assigned by QorPay or your merchant service provider (MSP)"
                },
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "orderid": {
                      "type": "string",
                      "description": "unique merchant order number"
                    },
                    "invoiceid": {
                      "type": "string",
                      "description": "merchant invoice number"
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    },
                    "amount": {
                      "type": "string",
                      "description": "the total amount collected for the sale"
                    },
                    "service_charge": {
                      "type": "string",
                      "description": "the amount of the service charge that is in the total sum of the transaction"
                    },
                    "currency": {
                      "type": "string",
                      "description": "the currency to process. Defaults to `USD` if no value provided",
                      "default": "USD"
                    },
                    "cfirstname": {
                      "type": "string",
                      "description": "the customer's first name"
                    },
                    "clastname": {
                      "type": "string",
                      "description": "the customer's last name"
                    },
                    "cidentity_type": {
                      "type": "string",
                      "description": "the customer's identity type. Potnetial vlaues can be `dl`, `passport`, `other`"
                    },
                    "cidentity": {
                      "type": "string",
                      "description": "the customer's identity"
                    },
                    "cemail": {
                      "type": "string",
                      "description": "the customer's email address"
                    },
                    "cphone": {
                      "type": "string",
                      "description": "the customer's phone number"
                    },
                    "ipaddress": {
                      "type": "string",
                      "description": "the IP address of the client or server sending the request"
                    }
                  },
                  "required": [
                    "orderid",
                    "amount"
                  ]
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "the name of the item"
                      },
                      "description": {
                        "type": "string",
                        "description": "a description of the item"
                      },
                      "ucc": {
                        "type": "string",
                        "description": "the item's Universal Commercial Code"
                      },
                      "upc": {
                        "type": "string",
                        "description": "the item's Universal Product Code"
                      },
                      "unit_price": {
                        "type": "integer",
                        "description": "the price per unit for the item"
                      },
                      "units_sold": {
                        "type": "integer",
                        "description": "the number of item units sold"
                      },
                      "unit_measurement": {
                        "type": "string",
                        "description": "the unit of measurement"
                      },
                      "total_amount": {
                        "type": "string",
                        "description": "the total amount of the item sale which should equal unit_price * units_sold + any taxes, discounts and/or fees"
                      }
                    }
                  }
                }
              },
              "required": [
                  "type",
                  "mid",
                  "transaction_data"
              ],
              "example": {
                "type": "",
                "mid": "",
                "transaction_data": {
                  "orderid": "",
                  "amount": "",
                  "service_charge": "",
                  "currency": "USD",
                  "cfirstname": "",
                  "clastname": "",
                  "cidentity_type": "",
                  "cidentity": "",
                  "cemail": "",
                  "cphone": "",
                  "ipaddress": ""
                },
                "items": [
                  {
                    "name": "",
                    "description": "",
                    "ucc": "",
                    "upc": "",
                    "unit_price": 0,
                    "units_sold": 0,
                    "unit_measurement": "",
                    "total_amount": ""
                  },
                  {
                    "name": "",
                    "description": "",
                    "ucc": " ",
                    "upc": "",
                    "unit_price": 0,
                    "units_sold": 0,
                    "unit_measurement": "",
                    "total_amount": ""
                  }
                ]
              }
            }
          }
        }
      },
      "input-refleqtion-Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "the transaction type",
                  "enum": [
                    "sale",
                    "authorization",
                    "void",
                    "refund",
                    "capture"
                  ]
                },
                "mid": {
                  "type": "string",
                  "description": "the merchant id (MID) assigned by QorPay or your merchant service provider (MSP)"
                },
                "auto_settle": {
                  "type": "integer",
                  "default": "0"
                },
                "transaction_data": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "status of the transaction - `approved` or `declined`"
                    },
                    "authcode": {
                      "type": "string",
                      "description": "if transaction was `approved` supply the authorization code from the processor"
                    },
                    "denial_code": {
                      "type": "string",
                      "description": "if transaction was `declined` supply the denial code from the processor"
                    },
                    "denial_code_description": {
                      "type": "string",
                      "description": "if transaction was `declined` supply the denial code description from the processor"
                    },
                    "orderid": {
                      "type": "string",
                      "description": "unique merchant order number"
                    },
                    "invoiceid": {
                      "type": "string",
                      "description": "merchant invoice number"
                    },
                    "transaction_date": {
                      "type": "string",
                      "description": ""
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "the processors / merchants unique transaction id, that is used in the corresponding settlement file"
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "A reference id that will be echo'd back in the message response."
                    },
                    "topt": {
                      "type": "string",
                      "description": "set a value to route a transaction to a pre-defined provider."
                    },
                    "transaction_type": {
                      "type": "string",
                      "description": "to further define the transaction type\nPotential values are `cc` = credit card, `debit` = PIN debit, `ebt` = electronic benefits, 'gc' = gift card, `voy` = voyager, `wex` = wright express",
                      "enum": [
                        "cc",
                        "debit",
                        "ebt",
                        "gc",
                        "voy",
                        "wex"
                      ]
                    },
                    "entry_mode": {
                      "type": "string",
                      "description": "how was the credit/debit card entered",
                      "enum": [
                        "emv",
                        "swipe",
                        "tap/nfc",
                        "keyed"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "the total amount to process"
                    },
                    "service_charge": {
                      "type": "string",
                      "description": "the amount of the total sum of this transaction that is made up of the service charge"
                    },
                    "currency": {
                      "type": "string",
                      "description": "the currency to process. Defaults to `USD` if no value provided"
                    },
                    "mcc_code": {
                      "type": "string",
                      "description": "The Merchant Category Code )MCC) for the merchant of record"
                    },
                    "cfirstname": {
                      "type": "string",
                      "description": "the customer's first name"
                    },
                    "clastname": {
                      "type": "string",
                      "description": "the customer's last name"
                    },
                    "cemail": {
                      "type": "string",
                      "description": "the customer's email address"
                    },
                    "cphone": {
                      "type": "string",
                      "description": "the customer's phone number"
                    },
                    "ipaddress": {
                      "type": "string",
                      "description": "the IP address of the client or server sending the request"
                    }
                  },
                  "required": [
                    "orderid",
                    "amount"
                  ]
                },
                "payment": {
                  "type": "object",
                  "properties": {
                    "cardfullname": {
                      "type": "string",
                      "description": "the name printed or embossed on the front of the credit/debit card\n`required` if store payment is set to true"
                    },
                    "name_on_account": {
                      "type": "string",
                      "description": "the name of the account holder for bank accounts (ach) or crypto accounts"
                    },
                    "routing_number": {
                      "type": "string",
                      "description": "if type = `ach`, then supply the routing number for the bank account"
                    },
                    "account_number": {
                      "type": "string",
                      "description": "the credit/debit card or bank account number.\nIf you do not have the full account number then `first_6` and `last_4` are required."
                    },
                    "first_6": {
                      "type": "string",
                      "description": "The first 6 digits of the credit/debit card (BIN) or bank account number"
                    },
                    "last_4": {
                      "type": "string",
                      "description": "The last 4 digits of the credit/debit card or bank account number"
                    },
                    "month": {
                      "type": "string",
                      "description": "the card expiration month - as 2 digits (ex. `02` for Febuary)"
                    },
                    "year": {
                      "type": "string",
                      "description": "the card expiration year - as 2 digits (ex. `24` for 2024)"
                    },
                    "cvv": {
                      "type": "string",
                      "description": "the credit/debit card verification value.\n3 digits for Visa, MasterCard, Discover\n4 digits for American Express"
                    },
                    "store_payment": {
                      "type": "boolean",
                      "description": "if set to `true`, this will store payment information in the QorCommerce Vault and return a payment token\n`account_number` is required along with the expiration date for a credit/debit cards, `routing_number` and name_on_account are required for bank accounts"
                    }
                  }
                },
                "billing": {
                  "type": "object",
                  "properties": {
                    "bzip": {
                      "type": "string",
                      "description": "the customer's billing zip code\n`required` if transaction is a credit/debit card"
                    },
                    "bcountry": {
                      "type": "string",
                      "description": "the customer's billing country code"
                    },
                    "baddress": {
                      "type": "string",
                      "description": "the customer's billing street address"
                    },
                    "baddress2": {
                      "type": "string",
                      "description": "the customer's billing street address 2 "
                    },
                    "bcity": {
                      "type": "string",
                      "description": "the customer's billing city"
                    },
                    "bstate": {
                      "type": "string",
                      "description": "the customer's billing state code - as 2 characters (ex. FL)"
                    }
                  }
                },
                "shipping": {
                  "type": "object",
                  "properties": {
                    "scountry": {
                      "type": "string",
                      "description": "the shipping address country code - as 3 characters (ex. `USA`)"
                    },
                    "saddress": {
                      "type": "string",
                      "description": "the shipping street address"
                    },
                    "saddress2": {
                      "type": "string",
                      "description": "the shipping street address 2"
                    },
                    "scity": {
                      "type": "string",
                      "description": "the shipping city"
                    },
                    "sstate": {
                      "type": "string",
                      "description": "the shipping state code - as 2 characters (ex. FL)"
                    },
                    "szip": {
                      "type": "integer",
                      "description": "the shipping zip/postal code"
                    },
                    "sphone": {
                      "type": "integer",
                      "description": "the shipping phone number (no dashes, hyphens, specail characters)"
                    }
                  }
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "the name of the item"
                      },
                      "description": {
                        "type": "string",
                        "description": "a description of the item"
                      },
                      "ucc": {
                        "type": "string",
                        "description": "the item's Universal Commercial Code"
                      },
                      "upc": {
                        "type": "string",
                        "description": "the item's Universal Product Code"
                      },
                      "unit_price": {
                        "type": "integer",
                        "description": "the price per unit for the item"
                      },
                      "units_sold": {
                        "type": "integer",
                        "description": "the number of item units sold"
                      },
                      "unit_measurement": {
                        "type": "string",
                        "description": "the unit of measurement"
                      },
                      "total_amount": {
                        "type": "string",
                        "description": "the total amount of the item sale which should equal unit_price * units_sold + any taxes, discounts and/or fees"
                      }
                    }
                  }
                },
                "threeDS": {
                  "type": "object",
                  "properties": {
                    "response_3DS": {
                      "type": "string",
                      "description": "Status response from 3-D Secure provider. Possible values are typically `success`, `failure`, `noaction` or `error` but can vary depending on provider"
                    },
                    "CAVV": {
                      "type": "string",
                      "description": "The 3-D Secure Cardholder Authentication Verification Value (MasterCard’s UCAF value)"
                    },
                    "ECIFlag": {
                      "type": "integer",
                      "description": "Electronic Commerce Indicator\n`0` = Payment has been flagged as SSL secured transaction\n`1` = Payment has been flagged as SSL 3-D Secure authentication transaction (cardholder enrolled)\n`2` = Payment has been flagged as SSL 3-D Secure authentication transaction (cardholder not enrolled or partial authenticated)"
                    },
                    "XID": {
                      "type": "string",
                      "description": "3-D Secure Transaction Identifier"
                    }
                  }
                },
                "risk": {
                  "type": "object",
                  "properties": {
                    "risk_provider": {
                      "type": "string",
                      "description": "the risk management provider"
                    },
                    "risk_score": {
                      "type": "integer",
                      "description": "the risk score associated to this transaction (if you are using a risk prevention system)"
                    }
                  }
                }
              },
              "required": [
                  "type",
                  "mid",
                  "auto_settle",
                  "transaction_data"
              ],
              "example": {
                "type": "",
                "mid": "",
                "transaction_data": {
                  "orderid": "",
                  "amount": "",
                  "service_charge": "",
                  "currency": "USD",
                  "cfirstname": "",
                  "clastname": "",
                  "cemail": "",
                  "cphone": "",
                  "ipaddress": ""
                },
                "payment": {
                  "cardfullname": "",
                  "first_6": "",
                  "last_4": "",
                  "month": "",
                  "year": "",
                  "cvv": "",
                  "store_payment": false
                },
                "items": [
                  {
                    "name": "",
                    "description": "",
                    "ucc": "",
                    "upc": "",
                    "unit_price": 0,
                    "units_sold": 0,
                    "unit_measurement": "",
                    "total_amount": ""
                  },
                  {
                    "name": "",
                    "description": "",
                    "ucc": " ",
                    "upc": "",
                    "unit_price": 0,
                    "units_sold": 0,
                    "unit_measurement": "",
                    "total_amount": ""
                  }
                ]
              }
            }
          }
        }
      },
      "ach-saleBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_data": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/input-ach-debit"
                    }
                  ]
                }
              },
              "example": {
                "transaction_data": {}
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Qor-Client-Key": {
        "name": "Qor-Client-Key",
        "type": "apiKey",
        "in": "header"
      },
      "Qor-App-Key": {
        "name": "Qor-App-Key",
        "type": "apiKey",
        "in": "header"
      }
    },
    "schemas": {
      "request-card-detail-token": {
        "title": "Request - Card Detail",
        "type": "object",
        "properties": {
          "creditcard": {
            "type": "string",
            "description": "The card token.\nexample: `909055$DQs7OHDo`",
            "maxLength": 16
          },
          "cvv": {
            "type": "string",
            "description": "The card verification value.  This is typically a 4-digit value found on the front of Amex cards or a 3-digit value found on the back of most other cards.",
            "maxLength": 4
          },
          "bcountry": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\"> ISO 3166-2 alpha-2</a> code for the card billing address country. "
          },
          "risk_score": {
            "type": "integer",
            "description": "risk score associated to this transaction  (*if you are using a risk prevention system*)."
          },
          "store_card": {
            "type": "boolean",
            "description": "Set to `true` if you want the card stored in the payment gateway vault and a card token representing the credit card returned to associate with a client for future charges."
          }
        },
        "required": [
          "creditcard",
          "cvv",
          "month",
          "year"
        ],
        "example": {
          "creditcard": "",
          "cvv": "",
          "month": "",
          "year": "",
          "cardfullname": "",
          "baddress": "",
          "baddress2": "",
          "bcity": "",
          "bstate": "",
          "bzip": "",
          "bcountry": "",
          "store_card": false
        }
      },
      "request-card-detail": {
        "title": "Request - Card Detail",
        "type": "object",
        "properties": {
          "creditcard": {
            "type": "string",
            "description": "The card account number. do not use spaces or special characters.\nexample: `5544044490909090`\n\nor the card token\nexample: `909055$DQs7OHDo`",
            "maxLength": 16
          },
          "cvv": {
            "type": "string",
            "description": "The card verification value.  This is typically a 4-digit value found on the front of Amex cards or a 3-digit value found on the back of most other cards.",
            "maxLength": 4
          },
          "month": {
            "type": "string",
            "description": "The card expiration date 2-digit numeric month.\n\nexample:  `\"04\"`"
          },
          "year": {
            "type": "string",
            "description": "The card expiration date 2-digit numeric year.\n\nexample:  `\"22\"`"
          },
          "cardfullname": {
            "type": "string",
            "description": "The full cardholder name or company printed or embossed on the fron of the card."
          },
          "baddress": {
            "type": "string",
            "description": "The card billing street address 1."
          },
          "baddress2": {
            "type": "string",
            "description": "The card billing street address 2"
          },
          "bcity": {
            "type": "string",
            "description": "The card billing address city name"
          },
          "bstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the card billing address state.\n\n"
          },
          "bzip": {
            "type": "string",
            "description": "The numeric 5 digit (US) postal code or 6 alpha/numeric character international  postal code."
          },
          "bcountry": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\"> ISO 3166-2 alpha-2</a> code for the card billing address country. "
          },
          "risk_score": {
            "type": "integer",
            "description": "risk score associated to this transaction  (*if you are using a risk prevention system*)."
          },
          "store_card": {
            "type": "boolean",
            "description": "Set to `true` if you want the card stored in the payment gateway vault and a card token representing the credit card returned to associate with a client for future charges."
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id that will be echo'd back in the message response."
          },
          "topt": {
            "type": "string",
            "description": "set a value to route a transaction to a pre-defined provider."
          },
          "tid": {
            "type": "string",
            "description": "terminal id for processing (use as a reference, but required for MarketPlace transactions)"
          }
        },
        "required": [
          "creditcard",
          "cvv",
          "month",
          "year"
        ],
        "example": {
          "creditcard": "",
          "cvv": "",
          "month": "",
          "year": "",
          "cardfullname": "",
          "baddress": "",
          "baddress2": "",
          "bcity": "",
          "bstate": "",
          "bzip": "",
          "bcountry": "",
          "store_card": false
        }
      },
      "response-sale-auth": {
        "title": "Response - Sale/Auth",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved`, `declined` and `error`",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message",
            "example": "Card Sale processed successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time the transaction has taken place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway unique transaction identifier. This value should be used for transaction lookups and when requesting voids and refunds",
            "example": "831649658996418"
          },
          "amount_approved": {
            "type": "string",
            "description": "The total amount approved and charged by the host processer",
            "example": "15.00"
          },
          "authcode": {
            "type": "string",
            "description": "The host processor authorization code",
            "example": "606012"
          },
          "token": {
            "type": "string",
            "description": "If the request value `store_card` = `1` then a token value representing the card will be provided in the response.\n\nThis token can be stored with your customer record and used in place of a credit card for future processing",
            "example": "909055$DQs7OHDo"
          }
        },
        "required": [
          "status",
          "code",
          "message"
        ]
      },
      "response-gift-card": {
        "title": "Response - Gift Card",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved`, `declined` and `error`",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message",
            "example": "Card Sale (gift card) was processed successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time the transaction has taken place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway unique transaction identifier. This value should be used for transaction lookups and when requesting voids and refunds",
            "example": "914348921542374360GC"
          },
          "amount_approved": {
            "type": "string",
            "description": "The total amount approved and charged by the host processer",
            "example": "1.38"
          },
          "balance": {
            "type": "string",
            "description": "The current balance on the gift card",
            "example": "0.00"
          },
          "authcode": {
            "type": "string",
            "description": "The host processor authorization code",
            "example": "A12346"
          }
        }
      },
      "request-token-card-track": {
        "title": "Request - Token Card Track",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "default": "",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP).",
            "maxLength": 24,
            "example": "887728202"
          },
          "trackdata": {
            "type": "string",
            "description": "Track data provided by the card reader",
            "example": "%B5544044490909090^SMITH/JOHN%20A^1904101084730001000000850000000?;5544044490909090=19041010847385000001?"
          },
          "ksnTrack": {
            "type": "string",
            "description": "Provide ksn for encrypted track data if provided by terminal.",
            "maxLength": 20,
            "example": "required - if terminal provides track encryption"
          }
        },
        "required": [
          "mid",
          "trackdata"
        ]
      },
      "request-credit-card-track": {
        "title": "Request - Credit Card Track",
        "type": "object",
        "properties": {
          "trackdata": {
            "type": "string",
            "description": "Track data provided by the card reader"
          },
          "ksnTrack": {
            "type": "string",
            "description": "Provide ksn for encrypted track data if provided by terminal.",
            "maxLength": 20
          },
          "store_card": {
            "type": "boolean",
            "description": "Boolean value set to true if you want the card stored in the payment gateway vault and a card token representing the credit card returned to associate with a client for future charges."
          }
        },
        "example": {
          "creditcard": "",
          "cvv": "",
          "month": "",
          "year": "",
          "cardfullname": "",
          "baddress": "",
          "baddress2": "",
          "bcity": "",
          "bstate": "",
          "bzip": "",
          "bcountry": "",
          "store_card": false
        }
      },
      "request-card-sale-required": {
        "title": "transaction_data",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP).",
            "maxLength": 24
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`\n"
          },
          "orderid": {
            "type": "string",
            "description": "Provide a unique order ID for this transaction.  If none provided, the payment gateway will insert a 36 character unique ID.\n\n**NOTE** You will receive an error response if you provide a duplicate orderid and the transaction will be Declined."
          },
          "ipaddress": {
            "type": "string",
            "description": "Provide an IP address for the client or server sending the request.\n\n**EXAMPLE:**  `148.18.27.134`",
            "maxLength": 16
          },
          "currency": {
            "type": "string",
            "description": "Provide the official <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> alphabetic currency code for the request amount."
          }
        },
        "required": [
          "mid",
          "amount"
        ],
        "example": {
          "mid": "",
          "amount": "",
          "orderid": "",
          "currency": "USD",
          "ipaddress": ""
        }
      },
      "request-card-payment": {
        "title": "Request - Card Payment",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
          },
          "transaction_id": {
            "type": "string",
            "description": "The original transaction_id"
          },
          "orderid": {
            "type": "string",
            "description": "The unique orderid from the original transaction"
          }
        },
        "example": {
          "mid": "",
          "transaction_id": "",
          "orderid": ""
        }
      },
      "request-customer-card-sale": {
        "title": "Request - Customer Card Sale",
        "type": "object",
        "properties": {
          "cfirstname": {
            "type": "string",
            "description": "Customer first name",
            "maxLength": 60
          },
          "clastname": {
            "type": "string",
            "description": "Customer last name"
          },
          "cemail": {
            "type": "string",
            "maxLength": 120,
            "format": "email",
            "description": "Customer email address"
          },
          "cphone": {
            "type": "string",
            "maxLength": 20,
            "description": "Customer phone number"
          }
        },
        "example": {
          "cfirstname": "",
          "clastname": "",
          "cemail": "",
          "cphone": ""
        }
      },
      "input-void-ach": {
        "title": "Input - ACH Void",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway transaction_id of the original ACH Debit or Credit"
          }
        },
        "required": [
          "mid",
          "transaction_id"
        ],
        "example": {
          "mid": "",
          "transaction_id": ""
        }
      },
      "request-auth-hospitality-params": {
        "title": "Request - Auth Hospitality Params",
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The beginning date for the stay or rental. string format as yymmdd. \n\n**Example**  `\"190408\"`",
            "maxLength": 6
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the stay or rental. string format as yymmdd. \n\n**Example**  `\"190416\"`",
            "maxLength": 6
          },
          "duration": {
            "type": "integer",
            "description": "an integer value representing a unit of time. \n\n**Example:** `4` could represent hours, days or months. \n\nThis value is used in combination with the rate parameter"
          },
          "rate": {
            "type": "number",
            "description": "The decimal amount to charge for each time unit specified in the **duration** parameter. \n\n**Example:**  a rate of  `34.99` represents $34.99 for one time unit in the **duration** parameter."
          },
          "referenceNum": {
            "type": "string",
            "description": "Folio Number (Lodging) or Rental Agreement Number (Auto Rental)",
            "maxLength": 20
          },
          "extraCharge": {
            "type": "integer",
            "description": "An integer value to identify an additional charge item. \n\nValues are:\n\n`2` = Restaurant\n`3` = Gift Shop\n`4` = Mini Bar\n`5` = Telephone\n`6`= Other\n`7` = Laundry"
          },
          "flag": {
            "type": "integer",
            "description": "An integer value to flag specific events. \n\nValues are:\n`1` = Incremental Auth\n`2` = No Show\n`3` = Auth Reversal"
          },
          "initialAuthAmount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`"
          }
        },
        "required": [
          "startDate",
          "enddate",
          "duration",
          "rate",
          "referenceNum"
        ]
      },
      "response-200-general-error": {
        "title": "Response - 200 General Error",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved`, `declined` and `error` ",
            "example": "declined"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail",
            "example": "GW03"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message.",
            "example": "error message!"
          }
        },
        "required": [
          "status"
        ]
      },
      "response-200-bin-check": {
        "title": "Response - 200 Bin Check",
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "card": {
            "type": "object",
            "properties": {
              "bin": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "category": {
                "type": "string"
              }
            }
          },
          "issuer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "tel": {
                "type": "string"
              }
            }
          },
          "country": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "numeric code": {
                "type": "string"
              },
              "alpha 2 code": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "currency name": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "valid": true,
          "card": {
            "bin": "370245",
            "scheme": "AMEX",
            "type": "credit",
            "category": "STANDARD"
          },
          "issuer": {
            "name": "BANK OF AMERCIA",
            "url": "www.bofa.com",
            "tel": "212 501 1111"
          },
          "country": {
            "name": "United States",
            "numeric code": "840",
            "alpha 2 code": "US",
            "latitude": "37.09024",
            "longitude": "-95.712891",
            "currency": "USD",
            "currency name": "United States dollar"
          }
        }
      },
      "request-gift-card-redeem": {
        "title": "Request - Gift Card Redeem",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "Merchant ID making this request.",
            "maxLength": 24
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`\n"
          },
          "orderid": {
            "type": "string",
            "description": "Provide a unique order ID for this transaction.  If none provided, the payment gateway will insert a 36 character unique ID.\n\n**NOTE** You will receive an error response if you provide a duplicate orderid and the transaction will be Declined."
          },
          "ipaddress": {
            "type": "string",
            "description": "Provide an IP address for the client or server sending the request.\n\n**EXAMPLE:**  `148.18.27.134`",
            "maxLength": 16
          },
          "creditcard": {
            "type": "string",
            "description": "The gift card account number"
          },
          "giftcard": {
            "type": "integer",
            "description": "Provide redemption code\n\n`1` = full redemption  \n`8` = partial redemption",
            "enum": [
              "1",
              "8"
            ],
            "minimum": 1,
            "maximum": 8
          }
        },
        "required": [
          "mid",
          "amount",
          "giftcard"
        ],
        "example": {
          "mid": "",
          "amount": "",
          "orderid": "",
          "ipaddress": "",
          "creditcard": "",
          "giftcard": 8
        }
      },
      "input-ach-credit": {
        "title": "Input - ACH Credit",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP).",
            "maxLength": 24
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`\n",
            "maxLength": 12
          },
          "orderid": {
            "type": "string",
            "description": "Provide a unique order ID for this transaction.  If none provided, the payment gateway will insert a 36 character unique ID.\n\n**NOTE** You will receive an error response if you provide a duplicate orderid and the transaction will be Declined.",
            "maxLength": 120
          },
          "seccode": {
            "type": "string",
            "description": "See [Standard Entry Class (SEC) Codes used for ACH](doc:standard-entry-class-sec-codes-used-for-ach) for more detail",
            "maxLength": 3
          },
          "checknumber": {
            "type": "string",
            "description": "Check number\n\nThis value is required if **seccode** = `RCK`",
            "maxLength": 8
          },
          "checkdate": {
            "type": "string",
            "description": "Check date formatted as **mmddyyyy**\n\n**Example:** `\"040319\"`",
            "maxLength": 8
          },
          "transactiondate": {
            "type": "string",
            "description": "Transaction date formatted as **mmddyyyy**\n\n**Example:** `\"040319\"`",
            "maxLength": 8
          },
          "abanumber": {
            "type": "string",
            "description": "Bank checking account routing number",
            "maxLength": 10
          },
          "accountnumber": {
            "type": "string",
            "description": "Checking account number",
            "maxLength": 40
          },
          "accounttype": {
            "type": "string",
            "description": "Provide the bank account type.",
            "enum": [
              "checking",
              "savings",
              "money market"
            ],
            "maxLength": 20
          },
          "accountname": {
            "type": "string",
            "description": "a name or nickname for this account",
            "maxLength": 80
          },
          "bankname": {
            "type": "string",
            "description": "Name of the bank",
            "maxLength": 80
          },
          "bankcity": {
            "type": "string",
            "description": "Bank city name",
            "maxLength": 40
          },
          "bankstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the bank state.\n",
            "maxLength": 2
          },
          "customerid": {
            "type": "string",
            "description": "Merchant Customer ID",
            "maxLength": 40
          },
          "firstname": {
            "type": "string",
            "description": "Account holder first name",
            "maxLength": 40
          },
          "lastname": {
            "type": "string",
            "description": "Account holder last name",
            "maxLength": 40
          },
          "middleinitial": {
            "type": "string",
            "description": "Account holder midle initial",
            "maxLength": 1
          },
          "phonenumber": {
            "type": "string",
            "description": "Account holder phone number",
            "maxLength": 20
          },
          "customeremail": {
            "type": "string",
            "description": "Account holder email",
            "maxLength": 120
          },
          "customeraddress1": {
            "type": "string",
            "description": "Account hoilder street 1 address",
            "maxLength": 120
          },
          "customeraddress2": {
            "type": "string",
            "description": "Account holder street 2 address",
            "maxLength": 20
          },
          "customercity": {
            "type": "string",
            "description": "Account holder city name",
            "maxLength": 40
          },
          "customerstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the account holder state."
          },
          "customerzipcode": {
            "type": "string",
            "description": "Account holder zip code"
          },
          "memo": {
            "type": "string",
            "description": "free form text memo",
            "maxLength": 255
          }
        },
        "required": [
          "mid",
          "amount",
          "seccode",
          "abanumber",
          "accountnumber",
          "accounttype",
          "accountname"
        ],
        "example": {
          "mid": "",
          "amount": "",
          "orderid": "",
          "seccode": "",
          "checknumber": "",
          "checkdate": "",
          "transactiondate": "",
          "abanumber": "",
          "accountnumber": "",
          "accounttype": "",
          "accountname": "",
          "bankname": "",
          "bankcity": "",
          "bankstate": "",
          "customerid": "",
          "firstname": "",
          "lastname": "",
          "middleinitial": "",
          "phonenumber": "",
          "customeremail": "",
          "customeraddress1": "",
          "customeraddress2": "",
          "customercity": "",
          "customerstate": "",
          "customerzipcode": "",
          "memo": ""
        }
      },
      "input-ach-refund": {
        "title": "Input - ACH Refund",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "Merchant ID making this request."
          },
          "transaction_id": {
            "type": "string",
            "description": "The transaction_id of the ACH debit to refund"
          },
          "orderid": {
            "type": "string",
            "description": "The unique orderid of the original ACH debit transaction"
          }
        }
      },
      "request-capture-refund": {
        "title": "Request - Card Refund",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`"
          },
          "transaction_id": {
            "type": "string",
            "description": "The transaction_id of the sale or capture to refund"
          },
          "orderid": {
            "type": "string",
            "description": "The unique orderid of the original sale or capture"
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id that will be echo'd back in the message response."
          }
        }
      },
      "request-item-object": {
        "title": "Request - Item Object",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The Item name",
            "maxLength": 40
          },
          "description": {
            "type": "string",
            "description": "The item description",
            "maxLength": 255
          },
          "ucc": {
            "type": "string",
            "description": "The item Uniform Commercial Code (ucc code)",
            "maxLength": 12
          },
          "upc": {
            "type": "string",
            "description": "The item Universal Product Code (upc).",
            "maxLength": 12
          },
          "unit_price": {
            "type": "number",
            "minimum": 0.00005,
            "maximum": 99999.99,
            "description": "Enter the price per item unit"
          },
          "units_sold": {
            "type": "number",
            "minimum": 0.00005,
            "maximum": 99999.99,
            "description": "The number of items sold."
          },
          "unit_measurement": {
            "type": "string",
            "description": "Provide the item unit of measurement.\n\n**Example** `each` or `carton`"
          },
          "total_amount": {
            "type": "string",
            "description": "Provide the total amount for this item.  This should include the unit_price * units_sold + any taxes, fees and discounts."
          }
        },
        "required": [
          "name",
          "total_amount"
        ],
        "example": {
          "name": "",
          "description": "",
          "ucc": " ",
          "upc": "",
          "unit_price": 0,
          "units_sold": 0,
          "unit_measurement": "",
          "total_amount": ""
        }
      },
      "request-l3-data": {
        "title": "Request - L3 Data",
        "type": "object",
        "properties": {
          "total_tax": {
            "type": "number",
            "maximum": 99999.99,
            "description": "The total tax amount for this purchase"
          },
          "purchase_order": {
            "type": "string",
            "description": "Provide the purchase order related to this sale.  If purchase order is not provided the payment gateway will assign a unique identifier",
            "maxLength": 80
          },
          "shipping_zip": {
            "type": "string",
            "maxLength": 12,
            "description": "If shipping items provide the destination zip code.  If not provided, the card billing zip code will be used."
          },
          "shipping_country": {
            "type": "string",
            "description": "If shipping items provide the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\"> ISO 3166-2 alpha-2</a> destination country code.",
            "maxLength": 2,
            "default": "US"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/request-item-object"
            }
          }
        },
        "required": [
          "total_tax"
        ],
        "example": {
          "total_tax": 0,
          "purchase_order": "",
          "shipping_zip": "",
          "shipping_country": "",
          "items": [
            {
              "name": "",
              "description": "",
              "ucc": " ",
              "upc": "",
              "unit_price": 0,
              "units_sold": 0,
              "unit_measurement": "",
              "total_amount": ""
            },
            {
              "name": "",
              "description": "",
              "ucc": " ",
              "upc": "",
              "unit_price": 0,
              "units_sold": 0,
              "unit_measurement": "",
              "total_amount": ""
            }
          ]
        }
      },
      "request-token-card-detail": {
        "title": "Request - Token Card Detail",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "default": "",
            "description": "Merchant ID assigned by <span style='color:#5375bd'><b><<company_name>></b></span> or the merchant service provider",
            "maxLength": 24
          },
          "creditcard": {
            "type": "string",
            "description": "The Card Account number.  Numberic only, do not use spaces or special characters.",
            "maxLength": 16
          },
          "month": {
            "type": "string",
            "description": "The card expiration date 2-digit numeric month.\n\nEXAMPLE:  `\"04\"`"
          },
          "year": {
            "type": "string",
            "description": "The card expiration date 2-digit numeric year.\n\nEXAMPLE:  `\"22\"`"
          },
          "cardfullname": {
            "type": "string",
            "description": "The full cardholder name or company printed or embossed on the fron of the card."
          },
          "bzip": {
            "type": "string",
            "description": "The numeric 5 digit (US) postal code or 6 alpha/numeric character international  postal code."
          },
          "baddress": {
            "type": "string",
            "description": "The card billing street address 1."
          },
          "baddress2": {
            "type": "string",
            "description": "The card billing street address 2"
          },
          "bcity": {
            "type": "string",
            "description": "The card billing address city name"
          },
          "bstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the card billing address state.\n\n"
          }
        },
        "required": [
          "creditcard",
          "month",
          "year",
          "cardfullname",
          "bzip"
        ],
        "example": {
          "mid": "<<mid>>",
          "creditcard": "",
          "cvv": "",
          "month": "",
          "year": "",
          "cardfullname": "",
          "baddress": "",
          "bcity": "",
          "bstate": "",
          "bzip": "",
          "bcountry": ""
        }
      },
      "request-void-auth": {
        "title": "Request - Void Auth",
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The transaction_id of the Authorization to Void"
          }
        }
      },
      "request-capture-auth": {
        "title": "Request - Capture Auth",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP)."
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`"
          },
          "transaction_id": {
            "type": "string",
            "description": "The unique transaction_id of the authorization"
          },
          "orderid": {
            "type": "string",
            "description": "The unique orderid of the original authorization"
          }
        }
      },
      "request-3ds-params": {
        "title": "Request - 3DS Params",
        "type": "object",
        "properties": {
          "CAVV": {
            "type": "string",
            "description": " 3-D Secure Cardholder Authentication Verification Value (MasterCard’s UCAF value) ",
            "maxLength": 40
          },
          "XID": {
            "type": "string",
            "description": "3-D Secure Transaction Identifier",
            "maxLength": 40
          },
          "ECIFlag": {
            "type": "string",
            "description": "Electronic Commerce Indicator\n\nValid Values are:\n\n`01`:  \n`02`:  ",
            "enum": [
              "01",
              "02"
            ],
            "minLength": 2,
            "maxLength": 2
          },
          "3D_response": {
            "type": "string",
            "enum": [
              "success",
              "failure",
              "noaction",
              "error"
            ],
            "description": "Status result of the 3-D Secure authentication.\n\nPossible values are:\n\n`success`:  authentication succeeded\n`failure`:. authentication failed\n`noaction`:  authentication "
          }
        },
        "required": [
          "CAVV",
          "XID",
          "ECIFlag",
          "3D_response"
        ]
      },
      "input-ach-debit": {
        "title": "Input - ACH Debit",
        "type": "object",
        "properties": {
          "mid": {
            "type": "string",
            "description": "The merchant id (MID) assigned by <<company_name>> or your merchant service provider (MSP).",
            "maxLength": 24
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id that will be echo'd back in the message response."
          },
          "topt": {
            "type": "string",
            "description": "set a value to route a transaction to a pre-defined provider."
          },
          "amount": {
            "type": "string",
            "description": "Enter whole numbers for dollar amount and up to 2 decimal places for cents amount.\n\n**Example for $12.00:** `12` or `12.0` or `12.00`  \n\n**Example for $10.50:** `10.5` or `10.50`\n",
            "maxLength": 12
          },
          "orderid": {
            "type": "string",
            "description": "Provide a unique Order ID for this transaction.  If none provided, the payment gateway will insert a unique Order ID.\n\n**NOTE** You will receive an error response if you provide a duplicate orderid and the transaction will be Declined.",
            "maxLength": 120
          },
          "seccode": {
            "type": "string",
            "description": "See [Standard Entry Class (SEC) Codes used for ACH](doc:standard-entry-class-sec-codes-used-for-ach) for more detail",
            "maxLength": 3
          },
          "checknumber": {
            "type": "string",
            "description": "Check number\n\nThis value is required if **seccode** = `RCK`",
            "maxLength": 8
          },
          "checkdate": {
            "type": "string",
            "description": "Check date formatted as **mmddyyyy**\n\n**Example:** `\"040319\"`",
            "maxLength": 8
          },
          "transactiondate": {
            "type": "string",
            "description": "Transaction date formatted as **mmddyyyy**\n\n**Example:** `\"040319\"`",
            "maxLength": 8
          },
          "routing_number": {
            "type": "string",
            "description": "Bank checking account routing number",
            "maxLength": 10
          },
          "account_number": {
            "type": "string",
            "description": "Checking account number -OR- account token",
            "maxLength": 40
          },
          "account_type": {
            "type": "string",
            "description": "Provide the bank account type.",
            "enum": [
              "checking",
              "savings",
              "money market"
            ],
            "maxLength": 20
          },
          "name_on_account": {
            "type": "string",
            "description": "a name or nickname for this account",
            "maxLength": 80
          },
          "bankname": {
            "type": "string",
            "description": "Name of the bank",
            "maxLength": 80
          },
          "bankcity": {
            "type": "string",
            "description": "Bank city name",
            "maxLength": 40
          },
          "bankstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the bank state.\n",
            "maxLength": 2
          },
          "customerid": {
            "type": "string",
            "description": "Merchant Customer ID",
            "maxLength": 40
          },
          "cfirstname": {
            "type": "string",
            "description": "Account holder first name",
            "maxLength": 40
          },
          "clastname": {
            "type": "string",
            "description": "Account holder last name",
            "maxLength": 40
          },
          "cphone": {
            "type": "string",
            "description": "Account holder phone number",
            "maxLength": 20
          },
          "cemail": {
            "type": "string",
            "description": "Account holder email",
            "maxLength": 120
          },
          "caddress": {
            "type": "string",
            "description": "Account hoilder street 1 address",
            "maxLength": 120
          },
          "caddress2": {
            "type": "string",
            "description": "Account holder street 2 address",
            "maxLength": 20
          },
          "ccity": {
            "type": "string",
            "description": "Account holder sity name",
            "maxLength": 40
          },
          "cstate": {
            "type": "string",
            "description": "The <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"> ISO 3166-2 alpha-2</a> code for the account holder state."
          },
          "czip": {
            "type": "string",
            "description": "Account holder zip code"
          },
          "memo": {
            "type": "string",
            "description": "free form text memo",
            "maxLength": 255
          }
        },
        "required": [
          "mid",
          "amount",
          "seccode",
          "abanumber",
          "accountnumber",
          "accounttype",
          "accountname"
        ],
        "example": {
          "mid": "",
          "amount": "",
          "orderid": "",
          "seccode": "",
          "checknumber": "",
          "checkdate": "",
          "transactiondate": "",
          "abanumber": "",
          "accountnumber": "",
          "accounttype": "",
          "accountname": "",
          "bankname": "",
          "bankcity": "",
          "bankstate": "",
          "customerid": "",
          "firstname": "",
          "lastname": "",
          "middleinitial": "",
          "phonenumber": "",
          "customeremail": "",
          "customeraddress1": "",
          "customeraddress2": "",
          "customercity": "",
          "customerstate": "",
          "customerzipcode": "",
          "memo": ""
        }
      },
      "response-201-refleqtion": {
        "title": "Response - 201 Refleqtion",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved` and `error` ",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message.",
            "example": "Refleqtion request recorded successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time that the transaction took place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The unique transaction identifier echo'd from request.",
            "example": "831649658996418"
          },
          "amount_recorded": {
            "type": "string",
            "description": "The total amount recorded",
            "example": "15.00"
          },
          "order_id": {
            "type": "string",
            "description": "The unique Order ID for this transaction",
            "example": "oid_1tES2kggOe"
          },
          "authcode": {
            "type": "string",
            "description": "The authorization code of the transaction.\nIf the transaction is a `sale` or `authorization` approval",
            "example": "B12301"
          }
        },
        "required": [
          "status",
          "code",
          "message"
        ]
      },
      "response-201-cash-sale": {
        "title": "Response - 201 Cash Sale",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved` and `error` ",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message.",
            "example": "Cash Sale recorded successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time that the transaction took place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway unique transaction identifier.  This value should be used for transaction lookups and when processing refunds",
            "example": "831649658996418"
          },
          "amount_recorded": {
            "type": "string",
            "description": "The total amount recorded",
            "example": "15.00"
          }
        },
        "required": [
          "status",
          "code",
          "message"
        ]
      },
      "response-200-ach-sale": {
        "title": "Response - 200 ACH Sale",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved`, `declined` and `error` ",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message.",
            "example": "ACH Sale processed successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time that the transaction took place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway unique transaction identifier.  This value should be used for transaction lookups and when processing refunds and voids",
            "example": "831649658996418"
          },
          "amount_approved": {
            "type": "string",
            "description": "The total amount approved and charged by the host processer",
            "example": "15.00"
          },
          "token": {
            "type": "string",
            "description": "If the request value `store_accnt` = `1` then a token value representing the bank account will be provided in the response.\n\nThis token can be stored with your customer record and used in place of an account for future processing.",
            "example": "909055$DQs7OHDo"
          }
        },
        "required": [
          "status",
          "code",
          "message"
        ]
      },
      "response-200-ach-credit-payout": {
        "title": "Response - 200 ACH Credit (Payout)",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transaction.\n\nPossible response values are `approved`, `declined` and `error` ",
            "example": "approved"
          },
          "code": {
            "type": "string",
            "description": "See [Payment Response Codes](doc:payment-response-codes) for more detail.",
            "example": "GW00"
          },
          "message": {
            "type": "string",
            "description": "A payment gateway status code message.",
            "example": "ACH credit was processed successfully"
          },
          "transaction_date": {
            "type": "string",
            "description": "The date and time that the transaction took place",
            "example": "2020-11-03 07:13:55"
          },
          "transaction_id": {
            "type": "string",
            "description": "The payment gateway unique transaction identifier.  This value should be used for transaction lookups and when processing refunds and voids",
            "example": "914348921542374360GC"
          },
          "amount_approved": {
            "type": "string",
            "description": "The amount credited by the host processer",
            "example": "15.00"
          }
        },
        "required": [
          "status",
          "code",
          "message"
        ]
      }
    }
  },
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "csharp",
    "node",
    "ruby",
    "java",
    "javascript",
    "php",
    "python",
    "swift"
  ]
}